{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/NewPostPage/LinkFlair.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinkFlair = ({\n  linkFlairs = [],\n  selectedFlair,\n  onSelectFlair,\n  newFlair,\n  onNewFlairChange\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"flair-select\",\n    children: \"Select Link Flair (optional):\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"flair-select\",\n    value: selectedFlair || \"\",\n    onChange: e => {\n      const selected = linkFlairs.find(flair => flair._id === e.target.value);\n      onSelectFlair(selected._id || \"\");\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), linkFlairs.map(linkFlair => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: linkFlair._id,\n      children: linkFlair.content\n    }, linkFlair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-flair\",\n      children: \"Or Create New Link Flair:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"new-flair\",\n      maxLength: \"30\",\n      value: newFlair,\n      placeholder: \"Enter new flair (optional)\",\n      onChange: e => onNewFlairChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n_c = LinkFlair;\nexport default LinkFlair;\nvar _c;\n$RefreshReg$(_c, \"LinkFlair\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LinkFlair","linkFlairs","selectedFlair","onSelectFlair","newFlair","onNewFlairChange","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","selected","find","flair","_id","target","map","linkFlair","content","type","maxLength","placeholder","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/NewPostPage/LinkFlair.jsx"],"sourcesContent":["import React from 'react';\n\nconst LinkFlair = ({ linkFlairs = [], selectedFlair, onSelectFlair, newFlair, onNewFlairChange }) => (\n    \n    <div>\n        <label htmlFor=\"flair-select\">Select Link Flair (optional):</label>\n        <select id=\"flair-select\" value={selectedFlair || \"\"} \n        onChange={e => {const selected = linkFlairs.find(flair => flair._id === e.target.value);\n            onSelectFlair(selected._id || \"\")}}>\n\n            <option value=\"\">None</option>\n            {linkFlairs.map(linkFlair => (\n                <option key={linkFlair._id} value={linkFlair._id}>\n                    {linkFlair.content}\n                </option>\n            ))}\n        </select>\n\n        <div>\n            <label htmlFor=\"new-flair\">Or Create New Link Flair:</label>\n            <input\n                type=\"text\"\n                id=\"new-flair\"\n                maxLength=\"30\"\n                value={newFlair}\n                placeholder=\"Enter new flair (optional)\"\n                onChange={e => onNewFlairChange(e.target.value)}\n            />\n        </div>\n    </div>\n);\n\nexport default LinkFlair;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,UAAU,GAAG,EAAE;EAAEC,aAAa;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,kBAE5FN,OAAA;EAAAO,QAAA,gBACIP,OAAA;IAAOQ,OAAO,EAAC,cAAc;IAAAD,QAAA,EAAC;EAA6B;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC,eACnEZ,OAAA;IAAQa,EAAE,EAAC,cAAc;IAACC,KAAK,EAAEX,aAAa,IAAI,EAAG;IACrDY,QAAQ,EAAEC,CAAC,IAAI;MAAC,MAAMC,QAAQ,GAAGf,UAAU,CAACgB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKJ,CAAC,CAACK,MAAM,CAACP,KAAK,CAAC;MACnFV,aAAa,CAACa,QAAQ,CAACG,GAAG,IAAI,EAAE,CAAC;IAAA,CAAE;IAAAb,QAAA,gBAEnCP,OAAA;MAAQc,KAAK,EAAC,EAAE;MAAAP,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7BV,UAAU,CAACoB,GAAG,CAACC,SAAS,iBACrBvB,OAAA;MAA4Bc,KAAK,EAAES,SAAS,CAACH,GAAI;MAAAb,QAAA,EAC5CgB,SAAS,CAACC;IAAO,GADTD,SAAS,CAACH,GAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC,eAETZ,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAOQ,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5DZ,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXZ,EAAE,EAAC,WAAW;MACda,SAAS,EAAC,IAAI;MACdZ,KAAK,EAAET,QAAS;MAChBsB,WAAW,EAAC,4BAA4B;MACxCZ,QAAQ,EAAEC,CAAC,IAAIV,gBAAgB,CAACU,CAAC,CAACK,MAAM,CAACP,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACR;AAACgB,EAAA,GA5BI3B,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}