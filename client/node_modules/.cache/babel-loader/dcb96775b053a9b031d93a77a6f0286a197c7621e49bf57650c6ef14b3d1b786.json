{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/sideNavbar.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/index.css';\nimport { UsePhredditContext } from './phredditContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideNavbar = () => {\n  //const [currentCommunity, setCurrentCommunity] = useState('')\n\n  const {\n    communities,\n    loadPage,\n    currentCommunityID,\n    currentPage,\n    user,\n    setSelectedCommunity\n  } = UsePhredditContext();\n  console.log(communities);\n  let sortedCommunities = communities;\n  if (user) {\n    sortedCommunities = [...communities].sort((a, b) => {\n      const isAMember = a.members.includes(user.displayName);\n      const isBMember = b.members.includes(user.displayName);\n      return isBMember - isAMember; // Members first\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => loadPage('home'),\n      className: `navbar-link ${currentPage === 'home' ? 'active' : 'inactive'}`,\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"navbar-header\",\n      children: \"COMMUNITIES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: e => {\n        if (!user) {\n          e.preventDefault(); // Prevent the default action (navigation)\n        } else {\n          loadPage('createCommunity'); // Proceed with the navigation if the user is logged in\n        }\n      },\n      className: `navbar-link ${!user ? 'disabled' : ''} ${currentPage === 'createCommunity' ? 'active' : ''}`,\n      children: \"Create Community\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-links-container\",\n      children: sortedCommunities.map(community => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: `community-link ${currentCommunityID === community._id && currentPage === \"community\" ? 'active' : ''}`,\n        onClick: () => {\n          setSelectedCommunity(null);\n          loadPage('community', community._id);\n        },\n        children: community.name\n      }, community._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = SideNavbar;\nexport default SideNavbar;\nvar _c;\n$RefreshReg$(_c, \"SideNavbar\");","map":{"version":3,"names":["React","useState","PropTypes","UsePhredditContext","jsxDEV","_jsxDEV","SideNavbar","communities","loadPage","currentCommunityID","currentPage","user","setSelectedCommunity","console","log","sortedCommunities","sort","a","b","isAMember","members","includes","displayName","isBMember","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","e","preventDefault","map","community","href","_id","name","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/sideNavbar.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/index.css';\nimport { UsePhredditContext } from './phredditContext';\n\nconst SideNavbar = () => {\n    //const [currentCommunity, setCurrentCommunity] = useState('')\n\n    const {communities, loadPage, currentCommunityID, currentPage, user, setSelectedCommunity} = UsePhredditContext()\n    console.log(communities)\n\n    let sortedCommunities = communities\n   \n    if (user){\n        sortedCommunities = [...communities].sort((a, b) => {\n            const isAMember = a.members.includes(user.displayName);\n            const isBMember = b.members.includes(user.displayName);\n            return isBMember - isAMember; // Members first\n          });\n    }\n   \n    return (\n        <div className=\"navbar\">\n            {/* Home button */}\n            <a \n            onClick={() => loadPage('home')}\n            className={`navbar-link ${currentPage === 'home' ? 'active' : 'inactive'}`}\n            >Home</a>\n\n            {/* Header for communities */}\n            <header className=\"navbar-header\">COMMUNITIES</header>\n\n            {/* Create Community button */}\n            <a \n            onClick={(e) => {\n                if (!user) {\n                  e.preventDefault();  // Prevent the default action (navigation)\n                } else {\n                  loadPage('createCommunity');  // Proceed with the navigation if the user is logged in\n                }\n              }}\n              className={`navbar-link ${!user ? 'disabled' : ''} ${currentPage === 'createCommunity' ? 'active' : ''}`}\n            >Create Community</a>\n            \n            {/* Render community links */}\n            <div className=\"community-links-container\">\n                {sortedCommunities.map(community => (\n                <a\n                    key={community._id}\n                    href=\"#\"\n                    className={`community-link ${currentCommunityID === community._id && currentPage === \"community\" ? 'active' : ''}`}\n                    onClick={() => {\n                        setSelectedCommunity(null)\n                        loadPage('community', community._id)}\n                    }\n                >\n                    {community.name}\n                </a>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n\nexport default SideNavbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}