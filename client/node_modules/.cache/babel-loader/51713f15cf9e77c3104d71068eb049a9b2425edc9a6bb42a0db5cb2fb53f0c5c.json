{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/userProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { UsePhredditContext } from './phredditContext';\nimport { usePostDeletion } from './functions';\nimport { deleteCommunity, deleteUser } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    deleteCommentsRecursively,\n    deletePosts\n  } = usePostDeletion();\n  const {\n    selectedUser,\n    user,\n    setSelectedUser,\n    communities,\n    posts,\n    comments,\n    setSelectedCommunity,\n    loadPage,\n    setSelectedPost,\n    setSelectedComment,\n    users,\n    setUsers,\n    setCommunities\n  } = UsePhredditContext();\n  const [activeListing, setActiveListing] = useState('');\n  const [userToDelete, setUserToDelete] = useState(null);\n  useEffect(() => {\n    console.log('Updated Comments:', comments);\n  }, [comments]);\n  useEffect(() => {\n    if (selectedUser.role === \"admin\") {\n      setActiveListing('users');\n    } else {\n      setActiveListing('posts');\n    }\n  }, [selectedUser]);\n  const formatDate = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n  };\n  const handleCommunity = community => {\n    setSelectedCommunity(community);\n    console.log(community);\n    loadPage(\"createCommunity\");\n  };\n  const handlePost = post => {\n    setSelectedPost(post);\n    loadPage(\"createPost\");\n  };\n  const handleComment = comment => {\n    setSelectedComment(comment);\n    loadPage(\"post\");\n  };\n  const handleUser = user => {\n    setSelectedUser(user);\n    loadPage('userProfile');\n  };\n  const handleBack = () => {\n    setSelectedUser(user);\n    loadPage('userProfile');\n  };\n  const getParentCommentsForDeletion = userToDelete => {\n    // Create a Set to store all reply IDs\n    const replyIds = new Set();\n    const userComments = new Set(); // To store comments made by the user\n\n    // First, iterate over all comments to gather replies and identify user comments\n    comments.forEach(comment => {\n      if (comment.commentIDs && comment.commentIDs.length > 0) {\n        comment.commentIDs.forEach(replyId => replyIds.add(replyId)); // Store reply IDs\n      }\n      if (comment.createdBy === userToDelete.displayName) {\n        userComments.add(comment._id); // Store user comments\n      }\n    });\n\n    // Now filter comments to get only the ones that are relevant for deletion\n    const parentComments = comments.filter(comment => {\n      // Check if the comment is created by the user and not a reply (parent comment)\n      const isReply = replyIds.has(comment._id); // Check if the comment is a reply\n      const isUserComment = comment.createdBy === userToDelete.displayName;\n      if (isUserComment && !isReply) {\n        // If the user made a parent comment, return it\n        return true;\n      }\n      if (isUserComment && isReply) {\n        // If the user made a reply, return the reply only if it's to another user\n        const parentComment = comments.find(c => c.commentIDs && c.commentIDs.includes(comment._id));\n        if (parentComment && parentComment.createdBy !== userToDelete.displayName) {\n          return true; // This reply is to another user, so include it\n        }\n      }\n\n      // Return false for any other cases (not user comment or reply to self)\n      return false;\n    });\n    return parentComments;\n  };\n  const handleDeleteUser = async () => {\n    const userComments = getParentCommentsForDeletion(userToDelete);\n    console.log(\"All the comments left to delete: \", userComments);\n    for (const commentToDelete of userComments) {\n      console.log(\"comment to delete: \", commentToDelete);\n      await deleteCommentsRecursively(commentToDelete);\n    }\n    const userCommunities = communities.filter(community => community.createdBy === userToDelete.displayName);\n    console.log(\"userCommunities: \", userCommunities);\n    for (const communityToDelete of userCommunities) {\n      console.log(\"community to delete: \", communityToDelete);\n      console.log(\"community id: \", communityToDelete);\n      await deletePosts(communityToDelete.postIDs);\n      await deleteCommunity(communityToDelete._id);\n      setCommunities(prev => prev.filter(community => community._id !== communityToDelete._id));\n    }\n    const userPosts = posts.filter(post => post.createdBy === userToDelete.displayName);\n    for (const postToDelete of userPosts) {\n      console.log(\"post to delete: \", postToDelete);\n      await deletePosts([postToDelete._id]);\n    }\n    await deleteUser(userToDelete._id);\n    setUsers(prev => prev.filter(user => user._id !== userToDelete._id));\n    setUserToDelete(null);\n  };\n  const renderListing = () => {\n    switch (activeListing) {\n      case 'users':\n        return users.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          children: users.map(user => user.displayName != selectedUser.displayName && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"grid-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"column-left\",\n                  onClick: () => handleUser(user),\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: user.displayName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Email: \", user.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Reputation: \", user.reputation]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"column-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-button\",\n                    onClick: () => setUserToDelete(user),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 32\n              }, this)\n            }, user._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), userToDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confirmation-popup\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popup-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Are you sure you want to delete this user?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"This action cannot be undone.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteUser(userToDelete),\n                  children: \"Yes, delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setUserToDelete(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this);\n      case 'posts':\n        return posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          children: posts.map(post => post.createdBy === selectedUser.displayName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            onClick: () => handlePost(post),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Posted on: \", formatDate(post.postedDate)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No posts found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this);\n      case 'communities':\n        return communities.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          children: communities.map(community => community.createdBy === selectedUser.displayName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            onClick: () => handleCommunity(community),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: community.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Members: \", community.members.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, community._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No communities found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this);\n      case 'comments':\n        return comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          children: comments.map(comment => comment.createdBy === selectedUser.displayName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            onClick: () => handleComment(comment),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Commented on: \", comment.postTitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)]\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    children: [selectedUser != user && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Return to Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        borderRadius: '10px',\n        padding: '20px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedUser.displayName || 'Guest User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Member Since:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 20\n        }, this), \" \", formatDate(selectedUser.dateJoined) || 'Unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 20\n        }, this), \" \", selectedUser.email || 'Not provided']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Reputation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 20\n        }, this), \" \", selectedUser.reputation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listing-buttons\",\n      children: [selectedUser.role === \"admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeListing === 'users' ? 'active' : '',\n        onClick: () => setActiveListing('users'),\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeListing === 'posts' ? 'active' : '',\n        onClick: () => setActiveListing('posts'),\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeListing === 'communities' ? 'active' : '',\n        onClick: () => setActiveListing('communities'),\n        children: \"Communities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeListing === 'comments' ? 'active' : '',\n        onClick: () => setActiveListing('comments'),\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listing-content\",\n      children: renderListing()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"0D0Cc7rCLMARxrGG2b4TAMFScXw=\", false, function () {\n  return [usePostDeletion];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","UsePhredditContext","usePostDeletion","deleteCommunity","deleteUser","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","deleteCommentsRecursively","deletePosts","selectedUser","user","setSelectedUser","communities","posts","comments","setSelectedCommunity","loadPage","setSelectedPost","setSelectedComment","users","setUsers","setCommunities","activeListing","setActiveListing","userToDelete","setUserToDelete","console","log","role","formatDate","timestamp","date","Date","toLocaleDateString","year","month","day","handleCommunity","community","handlePost","post","handleComment","comment","handleUser","handleBack","getParentCommentsForDeletion","replyIds","Set","userComments","forEach","commentIDs","length","replyId","add","createdBy","displayName","_id","parentComments","filter","isReply","has","isUserComment","parentComment","find","c","includes","handleDeleteUser","commentToDelete","userCommunities","communityToDelete","postIDs","prev","userPosts","postToDelete","renderListing","className","children","map","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","email","reputation","title","content","postedDate","name","members","postTitle","style","padding","maxWidth","margin","textAlign","border","borderRadius","boxShadow","display","alignItems","marginBottom","dateJoined","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/userProfilePage.jsx"],"sourcesContent":["import React, {useEffect, useState}from 'react';\nimport { UsePhredditContext } from './phredditContext';\nimport { usePostDeletion } from './functions';\nimport { deleteCommunity, deleteUser} from './api';\n\nconst UserProfile = () => {\n    const {deleteCommentsRecursively, deletePosts} = usePostDeletion()\n    const { selectedUser, user, setSelectedUser, communities, posts, comments, setSelectedCommunity, loadPage, \n            setSelectedPost, setSelectedComment, users, setUsers, setCommunities\n    } = UsePhredditContext();\n    const [activeListing, setActiveListing] = useState('');\n    const [userToDelete, setUserToDelete] = useState(null);\n\n    \n    useEffect(() => {\n        console.log('Updated Comments:', comments);\n      }, [comments])\n\n    useEffect(() => {\n        if(selectedUser.role === \"admin\"){\n            setActiveListing('users')\n        }else{\n            setActiveListing('posts')\n        }\n    }, [selectedUser]);\n\n    const formatDate = (timestamp) => {\n        const date = new Date(timestamp);\n        return date.toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n        });\n    };\n\n    const handleCommunity = (community) => {\n        setSelectedCommunity(community)\n        console.log(community)\n        loadPage(\"createCommunity\")\n    }\n\n    const handlePost = (post) => {\n        setSelectedPost(post)\n        loadPage(\"createPost\")\n    }\n\n    const handleComment = (comment) => {\n        setSelectedComment(comment)\n        loadPage(\"post\")\n    }\n\n    const handleUser = (user) => {\n        setSelectedUser(user)\n        loadPage('userProfile')\n    }\n\n    const handleBack = () => {\n        setSelectedUser(user)\n        loadPage('userProfile')\n    }\n\n    const getParentCommentsForDeletion = (userToDelete) => {\n        // Create a Set to store all reply IDs\n        const replyIds = new Set();\n        const userComments = new Set();  // To store comments made by the user\n    \n        // First, iterate over all comments to gather replies and identify user comments\n        comments.forEach((comment) => {\n            if (comment.commentIDs && comment.commentIDs.length > 0) {\n                comment.commentIDs.forEach((replyId) => replyIds.add(replyId)); // Store reply IDs\n            }\n    \n            if (comment.createdBy === userToDelete.displayName) {\n                userComments.add(comment._id); // Store user comments\n            }\n        });\n    \n        // Now filter comments to get only the ones that are relevant for deletion\n        const parentComments = comments.filter((comment) => {\n            // Check if the comment is created by the user and not a reply (parent comment)\n            const isReply = replyIds.has(comment._id); // Check if the comment is a reply\n            const isUserComment = comment.createdBy === userToDelete.displayName;\n            \n            if (isUserComment && !isReply) {\n                // If the user made a parent comment, return it\n                return true;\n            }\n    \n            if (isUserComment && isReply) {\n                // If the user made a reply, return the reply only if it's to another user\n                const parentComment = comments.find((c) => c.commentIDs && c.commentIDs.includes(comment._id));\n                if (parentComment && parentComment.createdBy !== userToDelete.displayName) {\n                    return true; // This reply is to another user, so include it\n                }\n            }\n    \n            // Return false for any other cases (not user comment or reply to self)\n            return false;\n        });\n    \n        return parentComments;\n    };\n    \n    \n    \n    \n    const handleDeleteUser = async () => {\n       \n        const userComments = getParentCommentsForDeletion(userToDelete);\n        console.log(\"All the comments left to delete: \", userComments)\n        for(const commentToDelete of userComments){\n            console.log(\"comment to delete: \", commentToDelete)\n            await deleteCommentsRecursively(commentToDelete)\n        }\n\n        const userCommunities = communities.filter(community => community.createdBy === userToDelete.displayName);\n        console.log(\"userCommunities: \", userCommunities)\n        for(const communityToDelete of userCommunities){\n            console.log(\"community to delete: \" , communityToDelete)\n            console.log(\"community id: \", communityToDelete)\n            await deletePosts(communityToDelete.postIDs)\n            await deleteCommunity(communityToDelete._id)\n            setCommunities(prev => prev.filter(community => community._id !== communityToDelete._id));\n        }\n\n        const userPosts = posts.filter(post => post.createdBy === userToDelete.displayName)\n        for(const postToDelete of userPosts){\n            console.log(\"post to delete: \", postToDelete)\n            await deletePosts([postToDelete._id])\n        }\n        \n\n        await deleteUser(userToDelete._id)\n        setUsers(prev => prev.filter( user => user._id !== userToDelete._id))\n        setUserToDelete(null)\n    }\n    \n\n    const renderListing = () => {\n        switch (activeListing) {\n            case 'users':\n                return users.length > 0 ? (\n                    <div className=\"card-list\">\n                        {users.map(user => (\n                            user.displayName != selectedUser.displayName && (\n                            <>\n                            <div key={user._id} className=\"card\">\n                               <div class=\"grid-container\">\n                                    <div class=\"column-left\" onClick = {() => handleUser(user)}>\n                                        <h3>{user.displayName}</h3>\n                                        <p>Email: {user.email}</p>\n                                        <p>Reputation: {user.reputation}</p>\n                                    </div>\n                                    <div class=\"column-right\">\n                                        <button className=\"delete-button\" onClick = {() => setUserToDelete(user)}>\n                                            Delete\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            {userToDelete && (\n                                <div className=\"confirmation-popup\">\n                                    <div className=\"popup-content\">\n                                        <h2>Are you sure you want to delete this user?</h2>\n                                        <p>This action cannot be undone.</p>\n                                        <button onClick = {() => handleDeleteUser(userToDelete)}>Yes, delete</button>\n                                        <button onClick={() => setUserToDelete(null)}>Cancel</button>\n                                    </div>\n                                </div>\n                            )} </>\n                        )\n                        ))} \n                        \n                    </div>\n                ) : (\n                    <p>No posts found.</p>\n                );\n            case 'posts':\n                return posts.length > 0 ? (\n                    <div className=\"card-list\">\n                        {posts.map(post => (\n                            post.createdBy === selectedUser.displayName && (\n                            <div key={post._id} className=\"card\" onClick = {() => handlePost(post)}>\n                                <h3>{post.title}</h3>\n                                <p>{post.content}</p>\n                                <p>Posted on: {formatDate(post.postedDate)}</p>\n                            </div>\n                        )\n                        ))}\n                    </div>\n                ) : (\n                    <p>No posts found.</p>\n                );\n            case 'communities':\n                return communities.length > 0 ? (\n                    <div className=\"card-list\" >\n                        {communities.map(community => (\n                            community.createdBy === selectedUser.displayName && (\n                            <div key={community._id} className=\"card\" onClick = {() => handleCommunity(community)}>\n                                <h3>{community.name}</h3>\n                                <p>Members: {community.members.length}</p>\n                            </div>\n                            )\n                        ))}\n                    </div>\n                ) : (\n                    <p>No communities found.</p>\n                );\n            case 'comments':\n                return comments.length > 0 ? (\n                    <div className=\"card-list\" >\n                        {comments.map(comment => (\n                            comment.createdBy === selectedUser.displayName && (\n                            <div key={comment._id} className=\"card\" onClick = {() => handleComment(comment)}>\n                                <h3>{comment.content}</h3>\n                                <p>Commented on: {comment.postTitle}</p>\n                            </div>\n                            )\n                        ))}\n                    </div>\n                ) : (\n                    <p>No comments found.</p>\n                );\n            default:\n                return null;\n        }\n    };\n    \n\n    return (\n        <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\n            {selectedUser != user && <button onClick = {handleBack}>Return to Profile</button>}\n            <h1 style={{ textAlign: 'center' }}>User Profile</h1>\n            <div style={{\n                border: '1px solid #ccc',\n                borderRadius: '10px',\n                padding: '20px',\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n            }}>\n                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n                    {/* <img \n                        src={selectedUser.avatar || 'https://via.placeholder.com/150'} \n                        alt={`${selectedUser.displayName}'s avatar`}\n                        style={{ borderRadius: '50%', width: '100px', height: '100px', marginRight: '20px' }}\n                    /> */}\n                    <h2>{selectedUser.displayName || 'Guest User'}</h2>\n                </div>\n                <p><strong>Member Since:</strong> {formatDate(selectedUser.dateJoined) || 'Unknown'}</p>\n                <p><strong>Email:</strong> {selectedUser.email || 'Not provided'}</p>\n                <p><strong>Reputation:</strong> {selectedUser.reputation}</p>\n                \n            </div>\n           \n\n            <div className=\"listing-buttons\">\n                {selectedUser.role === \"admin\" && <button\n                    className={activeListing === 'users' ? 'active' : ''}\n                    onClick={() => setActiveListing('users')}\n                >\n                    Users\n                </button>}\n                <button\n                    className={activeListing === 'posts' ? 'active' : ''}\n                    onClick={() => setActiveListing('posts')}\n                >\n                    Posts\n                </button>\n                <button\n                    className={activeListing === 'communities' ? 'active' : ''}\n                    onClick={() => setActiveListing('communities')}\n                >\n                    Communities\n                </button>\n                <button\n                    className={activeListing === 'comments' ? 'active' : ''}\n                    onClick={() => setActiveListing('comments')}\n                >\n                    Comments\n                </button>\n            </div>\n\n            <hr></hr>\n\n            {/* Render the current listing */}\n            <div className=\"listing-content\">{renderListing()}</div>\n\n            \n\n        </div>\n    );\n};\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAM,OAAO;AAC/C,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,eAAe,EAAEC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC,yBAAyB;IAAEC;EAAW,CAAC,GAAGV,eAAe,CAAC,CAAC;EAClE,MAAM;IAAEW,YAAY;IAAEC,IAAI;IAAEC,eAAe;IAAEC,WAAW;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,oBAAoB;IAAEC,QAAQ;IACjGC,eAAe;IAAEC,kBAAkB;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAC9D,CAAC,GAAGxB,kBAAkB,CAAC,CAAC;EACxB,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAGtDD,SAAS,CAAC,MAAM;IACZ+B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEb,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEhBnB,SAAS,CAAC,MAAM;IACZ,IAAGc,YAAY,CAACmB,IAAI,KAAK,OAAO,EAAC;MAC7BL,gBAAgB,CAAC,OAAO,CAAC;IAC7B,CAAC,MAAI;MACDA,gBAAgB,CAAC,OAAO,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACd,YAAY,CAAC,CAAC;EAElB,MAAMoB,UAAU,GAAIC,SAAS,IAAK;IAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACpCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,eAAe,GAAIC,SAAS,IAAK;IACnCvB,oBAAoB,CAACuB,SAAS,CAAC;IAC/BZ,OAAO,CAACC,GAAG,CAACW,SAAS,CAAC;IACtBtB,QAAQ,CAAC,iBAAiB,CAAC;EAC/B,CAAC;EAED,MAAMuB,UAAU,GAAIC,IAAI,IAAK;IACzBvB,eAAe,CAACuB,IAAI,CAAC;IACrBxB,QAAQ,CAAC,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMyB,aAAa,GAAIC,OAAO,IAAK;IAC/BxB,kBAAkB,CAACwB,OAAO,CAAC;IAC3B1B,QAAQ,CAAC,MAAM,CAAC;EACpB,CAAC;EAED,MAAM2B,UAAU,GAAIjC,IAAI,IAAK;IACzBC,eAAe,CAACD,IAAI,CAAC;IACrBM,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EAED,MAAM4B,UAAU,GAAGA,CAAA,KAAM;IACrBjC,eAAe,CAACD,IAAI,CAAC;IACrBM,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EAED,MAAM6B,4BAA4B,GAAIrB,YAAY,IAAK;IACnD;IACA,MAAMsB,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC1B,MAAMC,YAAY,GAAG,IAAID,GAAG,CAAC,CAAC,CAAC,CAAE;;IAEjC;IACAjC,QAAQ,CAACmC,OAAO,CAAEP,OAAO,IAAK;MAC1B,IAAIA,OAAO,CAACQ,UAAU,IAAIR,OAAO,CAACQ,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACrDT,OAAO,CAACQ,UAAU,CAACD,OAAO,CAAEG,OAAO,IAAKN,QAAQ,CAACO,GAAG,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC;MACpE;MAEA,IAAIV,OAAO,CAACY,SAAS,KAAK9B,YAAY,CAAC+B,WAAW,EAAE;QAChDP,YAAY,CAACK,GAAG,CAACX,OAAO,CAACc,GAAG,CAAC,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAG3C,QAAQ,CAAC4C,MAAM,CAAEhB,OAAO,IAAK;MAChD;MACA,MAAMiB,OAAO,GAAGb,QAAQ,CAACc,GAAG,CAAClB,OAAO,CAACc,GAAG,CAAC,CAAC,CAAC;MAC3C,MAAMK,aAAa,GAAGnB,OAAO,CAACY,SAAS,KAAK9B,YAAY,CAAC+B,WAAW;MAEpE,IAAIM,aAAa,IAAI,CAACF,OAAO,EAAE;QAC3B;QACA,OAAO,IAAI;MACf;MAEA,IAAIE,aAAa,IAAIF,OAAO,EAAE;QAC1B;QACA,MAAMG,aAAa,GAAGhD,QAAQ,CAACiD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACd,UAAU,IAAIc,CAAC,CAACd,UAAU,CAACe,QAAQ,CAACvB,OAAO,CAACc,GAAG,CAAC,CAAC;QAC9F,IAAIM,aAAa,IAAIA,aAAa,CAACR,SAAS,KAAK9B,YAAY,CAAC+B,WAAW,EAAE;UACvE,OAAO,IAAI,CAAC,CAAC;QACjB;MACJ;;MAEA;MACA,OAAO,KAAK;IAChB,CAAC,CAAC;IAEF,OAAOE,cAAc;EACzB,CAAC;EAKD,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IAEjC,MAAMlB,YAAY,GAAGH,4BAA4B,CAACrB,YAAY,CAAC;IAC/DE,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEqB,YAAY,CAAC;IAC9D,KAAI,MAAMmB,eAAe,IAAInB,YAAY,EAAC;MACtCtB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEwC,eAAe,CAAC;MACnD,MAAM5D,yBAAyB,CAAC4D,eAAe,CAAC;IACpD;IAEA,MAAMC,eAAe,GAAGxD,WAAW,CAAC8C,MAAM,CAACpB,SAAS,IAAIA,SAAS,CAACgB,SAAS,KAAK9B,YAAY,CAAC+B,WAAW,CAAC;IACzG7B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEyC,eAAe,CAAC;IACjD,KAAI,MAAMC,iBAAiB,IAAID,eAAe,EAAC;MAC3C1C,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAG0C,iBAAiB,CAAC;MACxD3C,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE0C,iBAAiB,CAAC;MAChD,MAAM7D,WAAW,CAAC6D,iBAAiB,CAACC,OAAO,CAAC;MAC5C,MAAMvE,eAAe,CAACsE,iBAAiB,CAACb,GAAG,CAAC;MAC5CnC,cAAc,CAACkD,IAAI,IAAIA,IAAI,CAACb,MAAM,CAACpB,SAAS,IAAIA,SAAS,CAACkB,GAAG,KAAKa,iBAAiB,CAACb,GAAG,CAAC,CAAC;IAC7F;IAEA,MAAMgB,SAAS,GAAG3D,KAAK,CAAC6C,MAAM,CAAClB,IAAI,IAAIA,IAAI,CAACc,SAAS,KAAK9B,YAAY,CAAC+B,WAAW,CAAC;IACnF,KAAI,MAAMkB,YAAY,IAAID,SAAS,EAAC;MAChC9C,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE8C,YAAY,CAAC;MAC7C,MAAMjE,WAAW,CAAC,CAACiE,YAAY,CAACjB,GAAG,CAAC,CAAC;IACzC;IAGA,MAAMxD,UAAU,CAACwB,YAAY,CAACgC,GAAG,CAAC;IAClCpC,QAAQ,CAACmD,IAAI,IAAIA,IAAI,CAACb,MAAM,CAAEhD,IAAI,IAAIA,IAAI,CAAC8C,GAAG,KAAKhC,YAAY,CAACgC,GAAG,CAAC,CAAC;IACrE/B,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAGD,MAAMiD,aAAa,GAAGA,CAAA,KAAM;IACxB,QAAQpD,aAAa;MACjB,KAAK,OAAO;QACR,OAAOH,KAAK,CAACgC,MAAM,GAAG,CAAC,gBACnBjD,OAAA;UAAKyE,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrBzD,KAAK,CAAC0D,GAAG,CAACnE,IAAI,IACXA,IAAI,CAAC6C,WAAW,IAAI9C,YAAY,CAAC8C,WAAW,iBAC5CrD,OAAA,CAAAE,SAAA;YAAAwE,QAAA,gBACA1E,OAAA;cAAoByE,SAAS,EAAC,MAAM;cAAAC,QAAA,eACjC1E,OAAA;gBAAK4E,KAAK,EAAC,gBAAgB;gBAAAF,QAAA,gBACtB1E,OAAA;kBAAK4E,KAAK,EAAC,aAAa;kBAACC,OAAO,EAAIA,CAAA,KAAMpC,UAAU,CAACjC,IAAI,CAAE;kBAAAkE,QAAA,gBACvD1E,OAAA;oBAAA0E,QAAA,EAAKlE,IAAI,CAAC6C;kBAAW;oBAAAyB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC3BjF,OAAA;oBAAA0E,QAAA,GAAG,SAAO,EAAClE,IAAI,CAAC0E,KAAK;kBAAA;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC1BjF,OAAA;oBAAA0E,QAAA,GAAG,cAAY,EAAClE,IAAI,CAAC2E,UAAU;kBAAA;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC,CAAC,eACNjF,OAAA;kBAAK4E,KAAK,EAAC,cAAc;kBAAAF,QAAA,eACrB1E,OAAA;oBAAQyE,SAAS,EAAC,eAAe;oBAACI,OAAO,EAAIA,CAAA,KAAMtD,eAAe,CAACf,IAAI,CAAE;oBAAAkE,QAAA,EAAC;kBAE1E;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC,GAZAzE,IAAI,CAAC8C,GAAG;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAab,CAAC,EACL3D,YAAY,iBACTtB,OAAA;cAAKyE,SAAS,EAAC,oBAAoB;cAAAC,QAAA,eAC/B1E,OAAA;gBAAKyE,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC1B1E,OAAA;kBAAA0E,QAAA,EAAI;gBAA0C;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnDjF,OAAA;kBAAA0E,QAAA,EAAG;gBAA6B;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACpCjF,OAAA;kBAAQ6E,OAAO,EAAIA,CAAA,KAAMb,gBAAgB,CAAC1C,YAAY,CAAE;kBAAAoD,QAAA,EAAC;gBAAW;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC7EjF,OAAA;kBAAQ6E,OAAO,EAAEA,CAAA,KAAMtD,eAAe,CAAC,IAAI,CAAE;kBAAAmD,QAAA,EAAC;gBAAM;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CACR,EAAC,GAAC;UAAA,eAAE,CAER;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC,gBAENjF,OAAA;UAAA0E,QAAA,EAAG;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACxB;MACL,KAAK,OAAO;QACR,OAAOtE,KAAK,CAACsC,MAAM,GAAG,CAAC,gBACnBjD,OAAA;UAAKyE,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrB/D,KAAK,CAACgE,GAAG,CAACrC,IAAI,IACXA,IAAI,CAACc,SAAS,KAAK7C,YAAY,CAAC8C,WAAW,iBAC3CrD,OAAA;YAAoByE,SAAS,EAAC,MAAM;YAACI,OAAO,EAAIA,CAAA,KAAMxC,UAAU,CAACC,IAAI,CAAE;YAAAoC,QAAA,gBACnE1E,OAAA;cAAA0E,QAAA,EAAKpC,IAAI,CAAC8C;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBjF,OAAA;cAAA0E,QAAA,EAAIpC,IAAI,CAAC+C;YAAO;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBjF,OAAA;cAAA0E,QAAA,GAAG,aAAW,EAAC/C,UAAU,CAACW,IAAI,CAACgD,UAAU,CAAC;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAHzC3C,IAAI,CAACgB,GAAG;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIb,CAER;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,gBAENjF,OAAA;UAAA0E,QAAA,EAAG;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACxB;MACL,KAAK,aAAa;QACd,OAAOvE,WAAW,CAACuC,MAAM,GAAG,CAAC,gBACzBjD,OAAA;UAAKyE,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrBhE,WAAW,CAACiE,GAAG,CAACvC,SAAS,IACtBA,SAAS,CAACgB,SAAS,KAAK7C,YAAY,CAAC8C,WAAW,iBAChDrD,OAAA;YAAyByE,SAAS,EAAC,MAAM;YAACI,OAAO,EAAIA,CAAA,KAAM1C,eAAe,CAACC,SAAS,CAAE;YAAAsC,QAAA,gBAClF1E,OAAA;cAAA0E,QAAA,EAAKtC,SAAS,CAACmD;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzBjF,OAAA;cAAA0E,QAAA,GAAG,WAAS,EAACtC,SAAS,CAACoD,OAAO,CAACvC,MAAM;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFpC7C,SAAS,CAACkB,GAAG;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGlB,CAER;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,gBAENjF,OAAA;UAAA0E,QAAA,EAAG;QAAqB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC9B;MACL,KAAK,UAAU;QACX,OAAOrE,QAAQ,CAACqC,MAAM,GAAG,CAAC,gBACtBjD,OAAA;UAAKyE,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrB9D,QAAQ,CAAC+D,GAAG,CAACnC,OAAO,IACjBA,OAAO,CAACY,SAAS,KAAK7C,YAAY,CAAC8C,WAAW,iBAC9CrD,OAAA;YAAuByE,SAAS,EAAC,MAAM;YAACI,OAAO,EAAIA,CAAA,KAAMtC,aAAa,CAACC,OAAO,CAAE;YAAAkC,QAAA,gBAC5E1E,OAAA;cAAA0E,QAAA,EAAKlC,OAAO,CAAC6C;YAAO;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BjF,OAAA;cAAA0E,QAAA,GAAG,gBAAc,EAAClC,OAAO,CAACiD,SAAS;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFlCzC,OAAO,CAACc,GAAG;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGhB,CAER;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,gBAENjF,OAAA;UAAA0E,QAAA,EAAG;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3B;MACL;QACI,OAAO,IAAI;IACnB;EACJ,CAAC;EAGD,oBACIjF,OAAA;IAAK0F,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAnB,QAAA,GAChEnE,YAAY,IAAIC,IAAI,iBAAIR,OAAA;MAAQ6E,OAAO,EAAInC,UAAW;MAAAgC,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClFjF,OAAA;MAAI0F,KAAK,EAAE;QAAEI,SAAS,EAAE;MAAS,CAAE;MAAApB,QAAA,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDjF,OAAA;MAAK0F,KAAK,EAAE;QACRK,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,MAAM;QACpBL,OAAO,EAAE,MAAM;QACfM,SAAS,EAAE;MACf,CAAE;MAAAvB,QAAA,gBACE1E,OAAA;QAAK0F,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAA1B,QAAA,eAMxE1E,OAAA;UAAA0E,QAAA,EAAKnE,YAAY,CAAC8C,WAAW,IAAI;QAAY;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNjF,OAAA;QAAA0E,QAAA,gBAAG1E,OAAA;UAAA0E,QAAA,EAAQ;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACtD,UAAU,CAACpB,YAAY,CAAC8F,UAAU,CAAC,IAAI,SAAS;MAAA;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxFjF,OAAA;QAAA0E,QAAA,gBAAG1E,OAAA;UAAA0E,QAAA,EAAQ;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC1E,YAAY,CAAC2E,KAAK,IAAI,cAAc;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEjF,OAAA;QAAA0E,QAAA,gBAAG1E,OAAA;UAAA0E,QAAA,EAAQ;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC1E,YAAY,CAAC4E,UAAU;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5D,CAAC,eAGNjF,OAAA;MAAKyE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC3BnE,YAAY,CAACmB,IAAI,KAAK,OAAO,iBAAI1B,OAAA;QAC9ByE,SAAS,EAAErD,aAAa,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG;QACrDyD,OAAO,EAAEA,CAAA,KAAMxD,gBAAgB,CAAC,OAAO,CAAE;QAAAqD,QAAA,EAC5C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjF,OAAA;QACIyE,SAAS,EAAErD,aAAa,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG;QACrDyD,OAAO,EAAEA,CAAA,KAAMxD,gBAAgB,CAAC,OAAO,CAAE;QAAAqD,QAAA,EAC5C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjF,OAAA;QACIyE,SAAS,EAAErD,aAAa,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAG;QAC3DyD,OAAO,EAAEA,CAAA,KAAMxD,gBAAgB,CAAC,aAAa,CAAE;QAAAqD,QAAA,EAClD;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjF,OAAA;QACIyE,SAAS,EAAErD,aAAa,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAG;QACxDyD,OAAO,EAAEA,CAAA,KAAMxD,gBAAgB,CAAC,UAAU,CAAE;QAAAqD,QAAA,EAC/C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENjF,OAAA;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTjF,OAAA;MAAKyE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEF,aAAa,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIvD,CAAC;AAEd,CAAC;AAAC7E,EAAA,CA7RID,WAAW;EAAA,QACoCP,eAAe;AAAA;AAAA0G,EAAA,GAD9DnG,WAAW;AA+RjB,eAAeA,WAAW;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}