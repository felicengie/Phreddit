{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/CreateAccountPage.jsx\",\n  _s = $RefreshSig$();\nimport TopBanner from \"./topBanner\";\nimport { useState } from \"react\";\nimport { fetchUserByEmail } from \"./api\";\nimport { UsePhredditContext } from \"./phredditContext\";\nimport { createUser } from \"./api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst bcryptjs = require('bcryptjs');\nconst SignUpPage = () => {\n  _s();\n  const {\n    setUser,\n    loadPage,\n    users\n  } = UsePhredditContext();\n  const bcryptjs = require(\"bcryptjs\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSignUp = async e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    setErrorMessage(''); // Reset any previous error messages\n\n    if (!email || !password || !displayName || !passwordCheck) {\n      setErrorMessage('All fields are required!');\n      return;\n    }\n    if (password != passwordCheck) {\n      setErrorMessage('Passwords Do Not Match');\n      return;\n    }\n\n    // Check if email already exists\n    const emailExists = users.some(user => user.email === email);\n    if (emailExists) {\n      setErrorMessage('Email already in use');\n      return;\n    }\n\n    // Check if displayName already exists\n    const displayNameExists = users.some(user => user.displayName === displayName);\n    if (displayNameExists) {\n      setErrorMessage('Display Name already in use');\n      return;\n    }\n\n    // Password validation: should not contain first name, last name, display name, or email\n    const passwordContainsInfo = [firstName, lastName, displayName, email].some(info => password.toLowerCase().includes(info.toLowerCase()));\n    if (passwordContainsInfo) {\n      setErrorMessage('Password should not contain your first name, last name, display name, or email.');\n      return;\n    }\n    try {\n      // Create the user object\n      const hashedPassword = await bcryptjs.hash(password, 10); // Hash the password\n      const newUser = {\n        email,\n        displayName,\n        password: hashedPassword.atfirstName,\n        lastName\n      };\n\n      // Call the createUser function to save the user\n      const response = await createUser(newUser);\n      if (response) {\n        console.log('User created successfully:', response);\n        setUser(response.data);\n        loadPage('login');\n        // Redirect to login or home page after successful signup\n      }\n    } catch (error) {\n      console.error('Error creating user:', error);\n      setErrorMessage('Error creating user. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignUp,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"firsrtName\",\n            name: \"firstName\",\n            placeholder: \"First Name\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"lastName\",\n            name: \"lastName\",\n            placeholder: \"Last Name\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"displayName\",\n            name: \"display\",\n            placeholder: \"Enter a Display Name\",\n            value: displayName,\n            onChange: e => setDisplayName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password2\",\n            name: \"password2\",\n            placeholder: \"Confirm Password\",\n            value: passwordCheck,\n            onChange: e => setPasswordCheck(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpPage, \"dY1no2RyRmrXT5hLFfhazpgR8pU=\");\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["TopBanner","useState","fetchUserByEmail","UsePhredditContext","createUser","jsxDEV","_jsxDEV","Fragment","_Fragment","bcryptjs","require","SignUpPage","_s","setUser","loadPage","users","firstName","setFirstName","lastName","setLastName","email","setEmail","displayName","setDisplayName","password","setPassword","passwordCheck","setPasswordCheck","errorMessage","setErrorMessage","handleSignUp","e","preventDefault","emailExists","some","user","displayNameExists","passwordContainsInfo","info","toLowerCase","includes","hashedPassword","hash","newUser","atfirstName","response","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","id","name","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/CreateAccountPage.jsx"],"sourcesContent":["import TopBanner from \"./topBanner\"\nimport { useState } from \"react\"\nimport { fetchUserByEmail } from \"./api\"\nimport {UsePhredditContext } from \"./phredditContext\"\nimport { createUser } from \"./api\"\nconst bcryptjs = require('bcryptjs')\n\nconst SignUpPage = () => {\n    const {setUser, loadPage, users} = UsePhredditContext();\n    const bcryptjs = require(\"bcryptjs\")\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [displayName, setDisplayName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [passwordCheck, setPasswordCheck] = useState(\"\")\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n\n    const handleSignUp = async (e) => {\n        e.preventDefault(); // Prevent the form from refreshing the page\n        setErrorMessage(''); // Reset any previous error messages\n    \n        if (!email || !password || !displayName || !passwordCheck) {\n          setErrorMessage('All fields are required!');\n          return;\n        }\n\n        if(password != passwordCheck){\n            setErrorMessage('Passwords Do Not Match')\n            return;\n        }\n\n        // Check if email already exists\n        const emailExists = users.some(user => user.email === email);\n        if (emailExists) {\n            setErrorMessage('Email already in use');\n            return;\n        }\n\n        // Check if displayName already exists\n        const displayNameExists = users.some(user => user.displayName === displayName);\n        if (displayNameExists) {\n            setErrorMessage('Display Name already in use');\n            return;\n        }\n\n         // Password validation: should not contain first name, last name, display name, or email\n         const passwordContainsInfo = [firstName, lastName, displayName, email].some(info => password.toLowerCase().includes(info.toLowerCase()));\n         if (passwordContainsInfo) {\n             setErrorMessage('Password should not contain your first name, last name, display name, or email.');\n             return;\n         }\n\n        try {\n            // Create the user object\n            const hashedPassword = await bcryptjs.hash(password, 10); // Hash the password\n            const newUser = {\n                email,\n                displayName,\n                password: hashedPassword.atfirstName,\n                lastName\n            };\n    \n            // Call the createUser function to save the user\n            const response = await createUser(newUser);\n    \n            if (response) {\n                console.log('User created successfully:', response);\n                setUser(response.data)\n                loadPage('login')\n                // Redirect to login or home page after successful signup\n            }\n\n        } catch (error) {\n            console.error('Error creating user:', error);\n            setErrorMessage('Error creating user. Please try again.');\n        }\n\n    }\n\n    return (\n        <>\n        <TopBanner></TopBanner>\n        <div className = \"page-container\">\n        <div className=\"login-container\">\n        <h1>Create Account</h1>\n        <form onSubmit={handleSignUp} className=\"login-form\">\n            \n\n            <input\n                id=\"firsrtName\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                required\n            />\n\n        <   input\n                id=\"lastName\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                required\n            />\n            \n            <input\n                id=\"displayName\"\n                name=\"display\"\n                placeholder=\"Enter a Display Name\"\n                value={displayName}\n                onChange={(e) => setDisplayName(e.target.value)}\n                required\n            />\n\n            <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n            />\n\n            <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n            />\n\n            <input\n                type=\"password\"\n                id=\"password2\"\n                name=\"password2\"\n                placeholder=\"Confirm Password\"\n                value={passwordCheck}\n                onChange={(e) => setPasswordCheck(e.target.value)}\n                required\n            />\n            \n            \n            <button type=\"submit\">Sign Up</button>\n        </form>\n\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default SignUpPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}