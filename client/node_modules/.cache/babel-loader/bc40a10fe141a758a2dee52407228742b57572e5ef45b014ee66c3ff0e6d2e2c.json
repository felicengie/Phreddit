{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/NewCommunityPage/CreateCommunity.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../stylesheets/index.css';\nimport PropTypes from 'prop-types';\nimport { UsePhredditContext } from '../phredditContext';\nimport { createCommunity } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommunityPage = () => {\n  _s();\n  const {\n    loadPage,\n    communities,\n    setCommunities\n  } = UsePhredditContext();\n  const [communityName, setCommunityName] = useState('');\n  const [communityDescription, setCommunityDescription] = useState('');\n  const [creatorUsername, setCreatorUsername] = useState('');\n  const [errors, setErrors] = useState({\n    name: '',\n    description: '',\n    username: ''\n  });\n  const handleCreateCommunity = async event => {\n    event.preventDefault();\n    let isValid = true;\n    const newErrors = {\n      name: '',\n      description: '',\n      username: ''\n    };\n\n    // Validate inputs\n    if (!communityName.trim()) {\n      newErrors.name = 'Community name is required.';\n      isValid = false;\n    }\n    if (!communityDescription.trim()) {\n      newErrors.description = 'Description is required.';\n      isValid = false;\n    }\n    if (!creatorUsername.trim()) {\n      newErrors.username = 'Username is required.';\n      isValid = false;\n    }\n\n    // Check for duplicate community names\n    const isDuplicate = communities.some(community => community.name.toLowerCase() === communityName.toLowerCase());\n    if (isValid && isDuplicate) {\n      newErrors.name = 'A community with this name already exists. Please choose a different name.';\n      isValid = false;\n    }\n\n    // Update errors state\n    setErrors(newErrors);\n\n    // If valid, create a new community\n    if (isValid) {\n      const newCommunity = {\n        name: communityName,\n        description: communityDescription,\n        postIDs: [],\n        startDate: new Date(),\n        members: [creatorUsername],\n        memberCount: 1\n      };\n      console.log(newCommunity);\n\n      // Add the new community to the model's data\n      //model.data.communities.unshift(newCommunity);\n      // renderCommunities(newCommunity); // call the function from main\n      //renderCommunities();\n      try {\n        // Call the API to create the community\n        const createdCommunity = await createCommunity(newCommunity);\n\n        // Update the communities state in context with the new community\n        setCommunities(prev => [...prev, createdCommunity]);\n\n        // Navigate to the newly created community's page\n        loadPage('community', createdCommunity._id);\n\n        // Reset form fields\n        setCommunityName('');\n        setCommunityDescription('');\n        setCreatorUsername('');\n        setErrors({\n          name: '',\n          description: '',\n          username: ''\n        });\n      } catch (error) {\n        // Handle error (e.g., show a notification or log it)\n        console.error('Error creating community:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tell us about your community\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A name and description help people understand what your community is all about.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateCommunity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"community-name\",\n          children: [\"Community Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"community-name\",\n          value: communityName,\n          onChange: e => setCommunityName(e.target.value),\n          maxLength: 100\n          // required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-counter\",\n          children: [communityName.length, \"/100\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"community-description\",\n          children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"community-description\",\n          value: communityDescription,\n          onChange: e => setCommunityDescription(e.target.value),\n          maxLength: 500\n          // required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-counter\",\n          children: [communityDescription.length, \"/500\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 22\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"creator-username\",\n          children: [\"Your Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"creator-username\",\n          value: creatorUsername,\n          onChange: e => setCreatorUsername(e.target.value)\n          // required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Engender Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(NewCommunityPage, \"7zZQxwHQHsdr6iVFJe32JYbqFLs=\");\n_c = NewCommunityPage;\nexport default NewCommunityPage;\nvar _c;\n$RefreshReg$(_c, \"NewCommunityPage\");","map":{"version":3,"names":["React","useState","PropTypes","UsePhredditContext","createCommunity","jsxDEV","_jsxDEV","NewCommunityPage","_s","loadPage","communities","setCommunities","communityName","setCommunityName","communityDescription","setCommunityDescription","creatorUsername","setCreatorUsername","errors","setErrors","name","description","username","handleCreateCommunity","event","preventDefault","isValid","newErrors","trim","isDuplicate","some","community","toLowerCase","newCommunity","postIDs","startDate","Date","members","memberCount","console","log","createdCommunity","prev","_id","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","style","color","type","id","value","onChange","e","target","maxLength","className","length","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/NewCommunityPage/CreateCommunity.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../../stylesheets/index.css';\nimport PropTypes from 'prop-types';\nimport { UsePhredditContext } from '../phredditContext';\nimport { createCommunity } from '../api';\n\nconst NewCommunityPage = () => {\n    const {loadPage, communities, setCommunities} = UsePhredditContext();\n    const [communityName, setCommunityName] = useState('');\n    const [communityDescription, setCommunityDescription] = useState('');\n    const [creatorUsername, setCreatorUsername] = useState('');\n    const [errors, setErrors] = useState({ name: '', description: '', username: '' });\n\n    const handleCreateCommunity = async (event) => {\n        event.preventDefault();\n        let isValid = true;\n        const newErrors = { name: '', description: '', username: '' };\n\n        // Validate inputs\n        if (!communityName.trim()) {\n            newErrors.name = 'Community name is required.';\n            isValid = false;\n        }\n        if (!communityDescription.trim()) {\n            newErrors.description = 'Description is required.';\n            isValid = false;\n        }\n        if (!creatorUsername.trim()) {\n            newErrors.username = 'Username is required.';\n            isValid = false;\n        }\n\n        // Check for duplicate community names\n        const isDuplicate = communities.some(community => community.name.toLowerCase() === communityName.toLowerCase());\n        if (isValid && isDuplicate) {\n            newErrors.name = 'A community with this name already exists. Please choose a different name.';\n            isValid = false;\n        }    \n\n        // Update errors state\n        setErrors(newErrors);\n\n    \n        // If valid, create a new community\n        if (isValid) {\n            const newCommunity = {\n                name: communityName,\n                description: communityDescription,\n                postIDs: [],\n                startDate: new Date(),\n                members: [creatorUsername],\n                memberCount: 1,\n            };\n\n            console.log(newCommunity)\n\n            // Add the new community to the model's data\n            //model.data.communities.unshift(newCommunity);\n            // renderCommunities(newCommunity); // call the function from main\n            //renderCommunities();\n            try {\n                // Call the API to create the community\n                const createdCommunity = await createCommunity(newCommunity);\n\n                // Update the communities state in context with the new community\n                setCommunities(prev => [...prev, createdCommunity]);\n\n                // Navigate to the newly created community's page\n                loadPage('community', createdCommunity._id);\n\n                // Reset form fields\n                setCommunityName('');\n                setCommunityDescription('');\n                setCreatorUsername('');\n                setErrors({ name: '', description: '', username: '' });\n            } catch (error) {\n                // Handle error (e.g., show a notification or log it)\n                console.error('Error creating community:', error);\n            }\n\n        }\n    };\n\n    return (\n        <div>\n            <h1>Tell us about your community</h1>\n            <p>A name and description help people understand what your community is all about.</p>\n            <form onSubmit={handleCreateCommunity}>\n                <div>\n                    <label htmlFor=\"community-name\">Community Name <span style={{ color: 'red' }}>*</span></label>\n                    <input\n                        type=\"text\"\n                        id=\"community-name\"\n                        value={communityName}\n                        onChange={(e) => setCommunityName(e.target.value)}\n                        maxLength={100}\n                        // required\n                    />\n                    <div className=\"character-counter\">\n                        {communityName.length}/100\n                    </div>\n                    {errors.name && <div className=\"error-message\">{errors.name}</div>}\n                </div>\n                <div>\n                    <label htmlFor=\"community-description\">Description <span style={{ color: 'red' }}>*</span></label>\n                    <textarea\n                        id=\"community-description\"\n                        value={communityDescription}\n                        onChange={(e) => setCommunityDescription(e.target.value)}\n                        maxLength={500}\n                        // required\n                    />\n                     <div className=\"character-counter\">\n                        {communityDescription.length}/500\n                    </div>\n                    {errors.description && <div className=\"error-message\">{errors.description}</div>}\n                </div>\n                <div>\n                    <label htmlFor=\"creator-username\">Your Username <span style={{ color: 'red' }}>*</span></label>\n                    <input\n                        type=\"text\"\n                        id=\"creator-username\"\n                        value={creatorUsername}\n                        onChange={(e) => setCreatorUsername(e.target.value)}\n                        // required\n                    />\n                    {errors.username && <div className=\"error-message\">{errors.username}</div>}\n                </div>\n                <button type=\"submit\">Engender Community</button>\n            </form>\n        </div>\n    );\n};\n\nexport default NewCommunityPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}