{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/login.jsx\",\n  _s = $RefreshSig$();\nimport TopBanner from \"./topBanner\";\nimport { useState } from \"react\";\nimport { fetchUserByEmail } from \"./api\";\nimport { UsePhredditContext } from \"./phredditContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    setUser,\n    loadPage\n  } = UsePhredditContext();\n  const bcryptjs = require(\"bcryptjs\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    setErrorMessage(''); // Reset any previous error messages\n\n    if (!userEmail || !password) {\n      setErrorMessage('Both fields are required!');\n      return;\n    }\n    try {\n      // Fetch user data by email\n      const fetchedUser = await fetchUserByEmail(userEmail);\n      if (!fetchedUser) {\n        setErrorMessage(\"User not found!\");\n        return;\n      }\n\n      // Compare the entered password with the stored hashed password\n      const isPasswordValid = await bcryptjs.compare(password, fetchedUser.password);\n      if (!isPasswordValid) {\n        setErrorMessage(\"Invalid email or password!\");\n        return;\n      }\n\n      // If successful, set the user state and clear the form\n      setUser(fetchedUser);\n      setUserEmail(\"\");\n      setPassword(\"\");\n      setErrorMessage(\"\");\n      console.log(\"Login successful:\", fetchedUser);\n      loadPage(\"home\");\n\n      // Redirect or perform additional actions on successful login\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setErrorMessage(\"An error occurred during login. Please try again.\");\n    }\n  };\n  const onSignUp = () => {\n    loadPage(\"signup\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your email\",\n            value: userEmail,\n            onChange: e => setUserEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Enter Your Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Don't have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"signup-button\",\n            onClick: onSignUp,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginPage, \"Xoa7u7qrxWrzJR5ijEPmrdq41Us=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["TopBanner","useState","fetchUserByEmail","UsePhredditContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","setUser","loadPage","bcryptjs","require","userEmail","setUserEmail","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","fetchedUser","isPasswordValid","compare","console","log","error","onSignUp","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","name","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/login.jsx"],"sourcesContent":["import TopBanner from \"./topBanner\"\nimport { useState } from \"react\"\nimport { fetchUserByEmail } from \"./api\"\nimport {UsePhredditContext } from \"./phredditContext\"\n\nconst LoginPage = () => {\n    const {setUser, loadPage} = UsePhredditContext();\n    const bcryptjs = require(\"bcryptjs\")\n    const [userEmail, setUserEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n    const handleLogin = async (e) => {\n        e.preventDefault(); // Prevent the form from refreshing the page\n        setErrorMessage(''); // Reset any previous error messages\n    \n        if (!userEmail || !password) {\n          setErrorMessage('Both fields are required!');\n          return;\n        }\n\n        try {\n            // Fetch user data by email\n            const fetchedUser = await fetchUserByEmail(userEmail);\n      \n            if (!fetchedUser) {\n              setErrorMessage(\"User not found!\");\n              return;\n            }\n      \n            // Compare the entered password with the stored hashed password\n            const isPasswordValid = await bcryptjs.compare(password, fetchedUser.password);\n      \n            if (!isPasswordValid) {\n              setErrorMessage(\"Invalid email or password!\");\n              return;\n            }\n      \n            // If successful, set the user state and clear the form\n            setUser(fetchedUser);\n            setUserEmail(\"\");\n            setPassword(\"\");\n            setErrorMessage(\"\");\n            console.log(\"Login successful:\", fetchedUser);\n            loadPage(\"home\")\n      \n            // Redirect or perform additional actions on successful login\n          } catch (error) {\n            console.error(\"Error during login:\", error);\n            setErrorMessage(\"An error occurred during login. Please try again.\");\n          }\n    }\n\n    const onSignUp = () =>{\n        loadPage(\"signup\")\n    }\n\n    return (\n        <>\n        <TopBanner></TopBanner>\n        <div className = \"page-container\">\n        <div className=\"login-container\">\n        <h1>Login</h1>\n        <form onSubmit={handleLogin} className=\"login-form\">\n            \n            <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={userEmail}\n                onChange={(e) => setUserEmail(e.target.value)}\n                required\n            />\n\n            <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Enter Your Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n            />\n\n            <button type=\"submit\">Login</button>\n        </form>\n\n        <div className=\"signup-link\">\n            <p>Don't have an account?</p>\n            <a className=\"signup-button\" onClick={onSignUp}>Sign Up</a>\n        </div>\n\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}