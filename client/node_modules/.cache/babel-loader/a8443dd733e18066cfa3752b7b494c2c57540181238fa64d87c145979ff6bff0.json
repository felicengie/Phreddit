{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/PostPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTimeDifference, calculateCommentCount } from './functions';\nimport CreateComment from './NewCommentPage/CreateComment.jsx';\nimport { UsePhredditContext } from './phredditContext.js';\nimport { createComment, updateComment, updatePost, updateUser, fetchUserByDisplayName } from './api.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const {\n    posts,\n    currentPostID,\n    communities,\n    linkflairs,\n    comments,\n    setComments,\n    setPosts,\n    user,\n    selectedComment,\n    setSelectedComment\n  } = UsePhredditContext();\n  const [post, setPost] = useState(posts.find(p => p._id === currentPostID));\n  const [community, setCommunity] = useState(communities.find(c => c.postIDs.includes(currentPostID)));\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [currentCommentID, setCurrentCommentID] = useState(null);\n  useEffect(() => {\n    const foundPost = posts.find(p => p._id === currentPostID);\n    const foundCommunity = communities.find(c => c.postIDs.includes(currentPostID));\n    if (selectedComment) {\n      setShowCommentForm(true);\n    }\n    const updateViewCount = async () => {\n      if (foundPost) {\n        setPost({\n          ...foundPost,\n          views: foundPost.views + 1\n        }); // Local view count increment\n        foundPost.views += 1; // Update model data view count\n        const updateViewCount = await updatePost(foundPost._id, foundPost);\n        setCommunity(foundCommunity);\n      }\n    };\n    updateViewCount();\n  }, [currentPostID, selectedComment]);\n  if (!post || !community) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 37\n  }, this);\n  const linkFlairData = linkflairs.find(flair => flair._id === post.linkFlairID);\n  const renderVoteButtons = postOrComment => {\n    var _postOrComment$upvote, _postOrComment$downvo;\n    const voteCount = postOrComment.upvoters.length - postOrComment.downvoters.length;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vote-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: postOrComment.createdBy === user.displayName || user.reputation < 50,\n            className: `vote-button upvote ${(_postOrComment$upvote = postOrComment.upvoters) !== null && _postOrComment$upvote !== void 0 && _postOrComment$upvote.includes(user.displayName) ? 'selected' : ''}`,\n            onClick: () => handleVote('upvote', postOrComment),\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"counter\",\n            children: voteCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: postOrComment.createdBy === user.displayName || user.reputation < 50,\n            className: `vote-button downvote ${(_postOrComment$downvo = postOrComment.downvoters) !== null && _postOrComment$downvo !== void 0 && _postOrComment$downvo.includes(user.displayName) ? 'selected' : ''}`,\n            onClick: () => handleVote('downvote', postOrComment),\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" Vote Count: \", voteCount]\n      }, void 0, true)\n    }, void 0, false);\n  };\n  const displayComments = (comments, commentIDs = [], level = 0) => {\n    if (!Array.isArray(commentIDs) || commentIDs.length === 0) {\n      // If there are no comment IDs to display, return an empty JSX element\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this);\n    }\n\n    // Sort the top-level commentIDs based on the commentedDate in descending order\n    const sortedCommentIDs = commentIDs.map(id => comments.find(c => c._id === id)) // Map IDs to comment objects\n    .filter(comment => comment && comment.commentedDate) // Filter out undefined or invalid comments\n    .sort((a, b) => new Date(b.commentedDate) - new Date(a.commentedDate)); // Sort by date\n\n    //   // If no valid comments exist after filtering, return a message\n    //   if (sortedCommentIDs.length === 0) {\n    //       return <div>No comments yet.</div>;\n    //   }\n\n    return sortedCommentIDs.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-wrapper\",\n      style: {\n        marginLeft: `${level * 20}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [comment.createdBy, \" | \", getTimeDifference(comment.commentedDate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counts\",\n        children: [user && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddCommentClick(comment._id),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 24\n        }, this), renderVoteButtons(comment)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this), comment.commentIDs && comment.commentIDs.length > 0 && displayComments(comments, comment.commentIDs, level + 1)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this));\n  };\n  const handleAddCommentClick = commentID => {\n    setShowCommentForm(true); // Show the comment form when \"Add a comment\" is clicked\n    setCurrentCommentID(commentID);\n  };\n  const handleVote = async (type, itemToUpdate) => {\n    if (!user) return; // Ensure the user is logged in\n    console.log(\"ITEM: \", itemToUpdate);\n    const isUpvoted = itemToUpdate.upvoters.includes(user.displayName);\n    const isDownvoted = itemToUpdate.downvoters.includes(user.displayName);\n    let reputationChange = 0;\n    // Prevent multiple votes by the same user\n    if (type === 'upvote') {\n      if (isUpvoted) {\n        // Undo the upvote\n        itemToUpdate.upvoters = itemToUpdate.upvoters.filter(id => id !== user.displayName);\n        // Subtract the previous reputation change (if any)\n        reputationChange = -5;\n      } else {\n        // Add upvote and undo downvote if present\n        if (isDownvoted) {\n          itemToUpdate.downvoters = itemToUpdate.downvoters.filter(id => id !== user.displayName);\n          reputationChange = 15; // Undo downvote (-10) and add upvote (+5)\n        } else {\n          reputationChange = 5; // New upvote\n        }\n        itemToUpdate.upvoters.push(user.displayName);\n      }\n    } else if (type === 'downvote') {\n      if (isDownvoted) {\n        // Undo the downvote\n        itemToUpdate.downvoters = itemToUpdate.downvoters.filter(id => id !== user.displayName);\n        // Subtract the previous reputation change (if any)\n        reputationChange = 10;\n      } else {\n        // Add downvote and undo upvote if present\n        if (isUpvoted) {\n          itemToUpdate.upvoters = itemToUpdate.upvoters.filter(id => id !== user.displayName);\n          reputationChange = -15; // Undo upvote (+5) and add downvote (-10)\n        } else {\n          reputationChange = -10; // New downvote\n        }\n        itemToUpdate.downvoters.push(user.displayName);\n      }\n    }\n    try {\n      let updatedItem;\n      if (itemToUpdate.title) {\n        updatedItem = await updatePost(itemToUpdate._id, itemToUpdate);\n        setPosts(prevPosts => prevPosts.map(p => p._id === itemToUpdate._id ? updatedItem : p));\n      } else if (itemToUpdate.commentedDate) {\n        // Assuming a comment has content\n        updatedItem = await updateComment(itemToUpdate._id, itemToUpdate);\n        setComments(prevComments => prevComments.map(c => c._id === itemToUpdate._id ? updatedItem : c));\n      } else {\n        throw new Error('Item is neither a post nor a comment');\n      }\n      console.log(reputationChange);\n      console.log(itemToUpdate.createdBy);\n      const retrieveUser = await fetchUserByDisplayName(itemToUpdate.createdBy);\n      const updatedUser = {\n        ...retrieveUser,\n        reputation: retrieveUser.reputation + reputationChange\n      };\n      const userUpdated = await updateUser(updatedUser._id, updatedUser);\n      console.log(userUpdated);\n    } catch (error) {\n      console.error('Error updating vote:', error);\n    }\n  };\n  const handleSubmitComment = async newCommentData => {\n    // Handle the new comment submission\n    const addComment = {\n      content: newCommentData.commentContent,\n      commentIDs: [],\n      // Initialize an empty array for any potential replies\n      createdBy: user.displayName,\n      commentedDate: new Date(),\n      // Set the current date\n      upvoters: [],\n      downvoters: []\n    };\n    console.log(\"comment data: \", addComment);\n    if (selectedComment) {\n      const updatedComment = await updateComment(selectedComment._id, addComment);\n      setComments(prevComments => [...prevComments, updatedComment]);\n      setSelectedComment(null);\n    } else {\n      const newComment = await createComment(addComment); // Variable with a unique name\n      setComments(prevComments => [...prevComments, newComment]);\n      console.log(\"created comment successfully\", newComment);\n\n      // If it's a reply to an existing comment, update the parent's commentIDs\n      if (newCommentData.parentCommentID) {\n        console.log(\"parent id: \", newCommentData.parentCommentID);\n        const parentComment = comments.find(comment => comment._id === newCommentData.parentCommentID);\n        console.log(\"parent comment found: \", parentComment);\n        if (parentComment) {\n          parentComment.commentIDs.push(newComment._id);\n          console.log(\"Updated parentComment: \", parentComment);\n          console.log(\"calling updateComment api: \", parentComment._id, parentComment);\n          const updatedComment = await updateComment(parentComment._id, parentComment);\n          console.log(\"Updated comment: \", updatedComment);\n          setComments(prevComments => prevComments.map(comment => comment._id === parentComment._id ? updatedComment : comment));\n        }\n      } else {\n        post.commentIDs.push(newComment._id);\n        console.log(\"New comment id: \", newComment._id);\n        const updatedPost = await updatePost(post._id, post);\n        console.log(\"Updated Post: \", updatedPost);\n        setPosts(prevPosts => prevPosts.map(p => p._id === post._id ? updatedPost : p));\n      }\n    }\n    setShowCommentForm(false); // Hide the form after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: !showCommentForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"postPage-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-name\",\n          children: community.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"posted-by\",\n          children: [\" | \", post.createdBy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-timestamp\",\n          children: [\" | \", getTimeDifference(post.postedDate.toLocaleString())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), linkFlairData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"link-flair\",\n          children: linkFlairData.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counts\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view-count\",\n            children: [\"Views: \", post.views]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-count\",\n            children: [\" Comments: \", calculateCommentCount(post, comments)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this), renderVoteButtons(post)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddCommentClick(null),\n        children: \"Add a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: displayComments(comments, post.commentIDs)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CreateComment, {\n      postID: currentPostID,\n      parentCommentID: currentCommentID,\n      onSubmit: handleSubmitComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"zq0+dyZPkIXgRLNVbHrPMo5wXgs=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useEffect","getTimeDifference","calculateCommentCount","CreateComment","UsePhredditContext","createComment","updateComment","updatePost","updateUser","fetchUserByDisplayName","jsxDEV","_jsxDEV","Fragment","_Fragment","PostPage","_s","posts","currentPostID","communities","linkflairs","comments","setComments","setPosts","user","selectedComment","setSelectedComment","post","setPost","find","p","_id","community","setCommunity","c","postIDs","includes","showCommentForm","setShowCommentForm","currentCommentID","setCurrentCommentID","foundPost","foundCommunity","updateViewCount","views","children","fileName","_jsxFileName","lineNumber","columnNumber","linkFlairData","flair","linkFlairID","renderVoteButtons","postOrComment","_postOrComment$upvote","_postOrComment$downvo","voteCount","upvoters","length","downvoters","className","disabled","createdBy","displayName","reputation","onClick","handleVote","displayComments","commentIDs","level","Array","isArray","sortedCommentIDs","map","id","filter","comment","commentedDate","sort","a","b","Date","style","marginLeft","content","handleAddCommentClick","commentID","type","itemToUpdate","console","log","isUpvoted","isDownvoted","reputationChange","push","updatedItem","title","prevPosts","prevComments","Error","retrieveUser","updatedUser","userUpdated","error","handleSubmitComment","newCommentData","addComment","commentContent","updatedComment","newComment","parentCommentID","parentComment","updatedPost","name","postedDate","toLocaleString","postID","onSubmit","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/PostPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTimeDifference, calculateCommentCount } from './functions';\nimport CreateComment from './NewCommentPage/CreateComment.jsx';\nimport { UsePhredditContext } from './phredditContext.js';\nimport { createComment, updateComment, updatePost, updateUser, fetchUserByDisplayName} from './api.js';\n\n\nconst PostPage = () => {\n    const {posts, currentPostID, communities, linkflairs, comments, setComments, setPosts, user, selectedComment, setSelectedComment} = UsePhredditContext()\n    const [post, setPost] = useState(posts.find(p => p._id === currentPostID));\n    const [community, setCommunity] = useState(communities.find(c => c.postIDs.includes(currentPostID)));\n    const [showCommentForm, setShowCommentForm] = useState(false);\n    const [currentCommentID, setCurrentCommentID] = useState(null);\n\n    useEffect(() => {\n    const foundPost = posts.find(p => p._id === currentPostID);\n    const foundCommunity = communities.find(c => c.postIDs.includes(currentPostID));\n    \n    if (selectedComment) {\n        setShowCommentForm(true)\n    }\n    const updateViewCount = async () => {\n      if (foundPost) {\n          setPost({ ...foundPost, views: foundPost.views + 1 }); // Local view count increment\n          foundPost.views += 1; // Update model data view count\n          const updateViewCount = await updatePost(foundPost._id, foundPost)\n          setCommunity(foundCommunity);\n    }}\n\n    updateViewCount();\n    }, [currentPostID, selectedComment]);\n\n    if (!post || !community) return <div>Loading...</div>;\n\n    const linkFlairData = linkflairs.find(flair => flair._id === post.linkFlairID);\n\n    const renderVoteButtons = (postOrComment) => {\n        const voteCount = postOrComment.upvoters.length - postOrComment.downvoters.length\n        return (\n        <>\n             {user ? (\n            <>\n                <div className=\"vote-container\">\n                    <button \n                        disabled={postOrComment.createdBy === user.displayName || user.reputation < 50}\n                        className={`vote-button upvote ${postOrComment.upvoters?.includes(user.displayName) ? 'selected' : ''}`}\n                        onClick={() => handleVote('upvote', postOrComment)}\n                    >\n                        ↑\n                    </button>\n                    <div className = \"counter\">{voteCount}</div>\n                    <button \n                        disabled={postOrComment.createdBy === user.displayName || user.reputation < 50}\n                        className={`vote-button downvote ${postOrComment.downvoters?.includes(user.displayName) ? 'selected' : ''}`}\n                        onClick={() => handleVote('downvote', postOrComment)}\n                    >\n                        ↓\n                    </button>\n                </div>\n            </>\n        ) : (\n            <> Vote Count: {voteCount}</>\n        )}\n        </>\n    )};\n\n    const displayComments = (comments, commentIDs = [], level = 0) => {\n      if (!Array.isArray(commentIDs) || commentIDs.length === 0) {\n          // If there are no comment IDs to display, return an empty JSX element\n          return <div>No comments yet.</div>;\n      }\n  \n      // Sort the top-level commentIDs based on the commentedDate in descending order\n      const sortedCommentIDs = commentIDs\n          .map(id => comments.find(c => c._id === id)) // Map IDs to comment objects\n          .filter(comment => comment && comment.commentedDate) // Filter out undefined or invalid comments\n          .sort((a, b) => new Date(b.commentedDate) - new Date(a.commentedDate)) // Sort by date\n  \n    //   // If no valid comments exist after filtering, return a message\n    //   if (sortedCommentIDs.length === 0) {\n    //       return <div>No comments yet.</div>;\n    //   }\n  \n      return sortedCommentIDs.map(comment => (\n          <div key={comment._id} className=\"comment-wrapper\" style={{ marginLeft: `${level * 20}px` }}>\n              <div>{comment.createdBy} | {getTimeDifference(comment.commentedDate)}</div>\n              <div>{comment.content}</div>\n  \n              {/* Reply button */}\n              <div className = \"counts\">\n              {user && <button onClick={() => handleAddCommentClick(comment._id)}>Reply</button>}\n              \n              {renderVoteButtons(comment)}\n              </div>\n              {/* Recursively display replies (if any) */}\n              {comment.commentIDs && comment.commentIDs.length > 0 && displayComments(comments, comment.commentIDs, level + 1)}\n          </div>\n      ));\n  };\n\n    const handleAddCommentClick = (commentID) => {\n        setShowCommentForm(true); // Show the comment form when \"Add a comment\" is clicked\n        setCurrentCommentID(commentID)\n    };\n\n    const handleVote = async (type, itemToUpdate) => {\n        if (!user) return; // Ensure the user is logged in\n        console.log(\"ITEM: \", itemToUpdate)\n        const isUpvoted = itemToUpdate.upvoters.includes(user.displayName);\n        const isDownvoted = itemToUpdate.downvoters.includes(user.displayName);\n        let reputationChange = 0; \n        // Prevent multiple votes by the same user\n        if (type === 'upvote') {\n            if (isUpvoted) {\n                // Undo the upvote\n                itemToUpdate.upvoters = itemToUpdate.upvoters.filter(id => id !== user.displayName);\n                // Subtract the previous reputation change (if any)\n                reputationChange = -5;\n            } else {\n                // Add upvote and undo downvote if present\n                if (isDownvoted) {\n                    itemToUpdate.downvoters = itemToUpdate.downvoters.filter(id => id !== user.displayName);\n                    reputationChange = 15; // Undo downvote (-10) and add upvote (+5)\n                } else {\n                    reputationChange = 5; // New upvote\n                }\n                itemToUpdate.upvoters.push(user.displayName);\n            }\n        } else if (type === 'downvote') {\n            if (isDownvoted) {\n                // Undo the downvote\n                itemToUpdate.downvoters = itemToUpdate.downvoters.filter(id => id !== user.displayName);\n                // Subtract the previous reputation change (if any)\n                reputationChange = 10;\n            } else {\n                // Add downvote and undo upvote if present\n                if (isUpvoted) {\n                    itemToUpdate.upvoters = itemToUpdate.upvoters.filter(id => id !== user.displayName);\n                    reputationChange = -15; // Undo upvote (+5) and add downvote (-10)\n                } else {\n                    reputationChange = -10; // New downvote\n                }\n                itemToUpdate.downvoters.push(user.displayName);\n            }\n        }\n        try {\n            let updatedItem;\n            if (itemToUpdate.title) {   \n                updatedItem = await updatePost(itemToUpdate._id, itemToUpdate);\n                setPosts((prevPosts) =>\n                    prevPosts.map((p) => (p._id === itemToUpdate._id ? updatedItem : p))\n                );\n            } else if (itemToUpdate.commentedDate) { // Assuming a comment has content\n                updatedItem = await updateComment(itemToUpdate._id, itemToUpdate);\n                setComments((prevComments) =>\n                    prevComments.map((c) => (c._id === itemToUpdate._id ? updatedItem : c))\n                );\n            } else {\n                throw new Error('Item is neither a post nor a comment');\n            }\n            console.log(reputationChange)\n            console.log(itemToUpdate.createdBy)\n            const retrieveUser = await fetchUserByDisplayName(itemToUpdate.createdBy)\n            const updatedUser = {\n                ...retrieveUser,\n                reputation: retrieveUser.reputation + reputationChange,\n            };\n            const userUpdated = await updateUser(updatedUser._id, updatedUser);\n            console.log(userUpdated)\n        } catch (error) {\n            console.error('Error updating vote:', error);\n        }\n    \n    };\n\n    const handleSubmitComment = async (newCommentData) => {\n      // Handle the new comment submission\n      const addComment = {\n          content: newCommentData.commentContent,\n          commentIDs: [], // Initialize an empty array for any potential replies\n          createdBy: user.displayName,\n          commentedDate: new Date(), // Set the current date\n          upvoters: [],\n          downvoters: []\n      };\n\n      console.log(\"comment data: \", addComment)\n      \n      if(selectedComment){\n        const updatedComment = await updateComment(selectedComment._id, addComment)\n        setComments((prevComments) => [...prevComments, updatedComment]);\n        setSelectedComment(null)\n      }else{\n\n        const newComment = await createComment(addComment); // Variable with a unique name\n        setComments((prevComments) => [...prevComments, newComment]);\n\n      console.log(\"created comment successfully\", newComment)\n      \n      \n      // If it's a reply to an existing comment, update the parent's commentIDs\n      if (newCommentData.parentCommentID) {\n        console.log(\"parent id: \", newCommentData.parentCommentID)\n        const parentComment = comments.find((comment) => comment._id === newCommentData.parentCommentID);\n        console.log(\"parent comment found: \", parentComment)\n          if (parentComment) {\n              parentComment.commentIDs.push(newComment._id);\n              console.log(\"Updated parentComment: \", parentComment)\n              console.log(\"calling updateComment api: \", parentComment._id, parentComment)\n              const updatedComment = await updateComment(parentComment._id, parentComment);\n              console.log(\"Updated comment: \", updatedComment)\n              setComments((prevComments) =>\n                  prevComments.map((comment) =>\n                      comment._id === parentComment._id ? updatedComment : comment\n                  )\n              );\n          }\n      } else {\n          post.commentIDs.push(newComment._id);\n          console.log(\"New comment id: \", newComment._id)\n          const updatedPost = await updatePost(post._id, post);\n          console.log(\"Updated Post: \", updatedPost)\n          setPosts((prevPosts) =>\n              prevPosts.map((p) => (p._id === post._id ? updatedPost : p))\n          );\n      }\n\n      }\n      \n  \n      setShowCommentForm(false); // Hide the form after submission\n  };\n  \n    \n\n\n    return (\n        <div className=\"postPage\">\n            {!showCommentForm ? (\n                <>\n                <header className=\"postPage-header\">\n                <span className=\"community-name\">{community.name}</span>\n                <span className=\"posted-by\"> | {post.createdBy}</span>\n                <span className=\"post-timestamp\"> | {getTimeDifference(post.postedDate.toLocaleString())}</span>\n                \n                <h1 className=\"post-title\">{post.title}</h1>\n                {linkFlairData && <div className=\"link-flair\">{linkFlairData.content}</div>}\n                <div className=\"post-content\">{post.content}</div>\n                <div className=\"counts\">\n                    <span className=\"view-count\">Views: {post.views}</span>\n                    <span className=\"comment-count\"> Comments: {calculateCommentCount(post,comments)}</span>\n                    {renderVoteButtons(post)}\n                </div>\n                </header>\n                <button onClick={() => handleAddCommentClick(null)}>Add a comment</button>\n                <hr />\n                <div className=\"comments-section\">\n                    {displayComments(comments, post.commentIDs)}\n                </div>\n                </>\n            ) : (<CreateComment postID={currentPostID} parentCommentID = {currentCommentID} onSubmit={handleSubmitComment} />)}\n        </div>\n    );\n};\n\nexport default PostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}