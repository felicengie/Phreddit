{"ast":null,"code":"// api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\n\n// Fetch data with error handling\nexport const fetchPosts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/posts`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching posts:', error);\n    throw error; // Propagate error so that it can be handled in the component\n  }\n};\nexport const fetchPost = async postID => {\n  try {\n    const response = await axios.get(`${API_URL}/posts/${postID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching post:', error);\n    throw error; // Propagate error so that it can be handled in the component\n  }\n};\nexport const fetchComments = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/comments`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n    throw error;\n  }\n};\nexport const fetchComment = async commentID => {\n  try {\n    const response = await axios.get(`${API_URL}/comments/${commentID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching comment:', error);\n    throw error; // Propagate error so that it can be handled in the component\n  }\n};\nexport const fetchCommunities = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/communities`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching communities:', error);\n    throw error;\n  }\n};\nexport const fetchLinkFlairs = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/linkflairs`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching link flairs:', error);\n    throw error;\n  }\n};\nexport const fetchUsers = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/users`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\nexport const fetchUserByEmail = async email => {\n  try {\n    const response = await axios.get(`${API_URL}/users/email/${email}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with email ${email}:`, error);\n    throw error;\n  }\n};\nexport const fetchUserByDisplayName = async displayName => {\n  try {\n    const response = await axios.get(`${API_URL}/users/displayName/${displayName}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with displayName ${displayName}:`, error);\n    throw error;\n  }\n};\nexport const fetchUserById = async userId => {\n  try {\n    const response = await axios.get(`${API_URL}/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with ID ${userId}:`, error);\n    throw error;\n  }\n};\n\n// Create, update, and delete posts with error handling\nexport const createPost = async post => {\n  try {\n    const response = await axios.post(`${API_URL}/posts`, post);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating post:', error);\n    throw error;\n  }\n};\nexport const createLinkFlair = async flairContent => {\n  try {\n    const response = await axios.post(`${API_URL}/linkflairs`, {\n      content: flairContent\n    });\n    return response.data; // This should return the new linkFlair with its generated ID\n  } catch (error) {\n    console.error('Error creating link flair:', error);\n    throw error;\n  }\n};\nexport const createCommunity = async community => {\n  try {\n    const response = await axios.post(`${API_URL}/communities`, community);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error creating community\", error);\n    throw error;\n  }\n};\nexport const createComment = async comment => {\n  try {\n    const response = await axios.post(`${API_URL}/comments`, comment);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error creating comment\", error);\n    throw error;\n  }\n};\nexport const createUser = async user => {\n  try {\n    const response = await axios.post(`${API_URL}/users`, user);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error creating user\", error);\n    throw error;\n  }\n};\nexport const updatePost = async (postId, post) => {\n  try {\n    const response = await axios.put(`${API_URL}/posts/${postId}`, post);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating post:', error);\n    throw error;\n  }\n};\nexport const updateCommunity = async (communityID, updatedCommunityData) => {\n  try {\n    const response = await axios.put(`${API_URL}/communities/${communityID}`, updatedCommunityData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating community:', error);\n    throw error;\n  }\n};\nexport const updateComment = async (commentID, updatedCommentData) => {\n  try {\n    const response = await axios.put(`${API_URL}/comments/${commentID}`, updatedCommentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating comment:', error);\n    throw error;\n  }\n};\nexport const updateUser = async (userID, updatedUserData) => {\n  try {\n    const response = await axios.put(`${API_URL}/users/${userID}`, updatedUserData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\nexport const deletePost = async postId => {\n  try {\n    const response = await axios.delete(`${API_URL}/posts/${postId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting post:', error);\n    throw error;\n  }\n};\nexport const deleteComment = async commentID => {\n  try {\n    const response = await axios.delete(`${API_URL}/comments/${commentID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting comment:', error);\n    throw error;\n  }\n};\nexport const deleteCommunity = async communityID => {\n  try {\n    console.log(\"attemtping to delete community with id: \", communityID);\n    const response = await axios.delete(`${API_URL}/communities/${communityID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting community:', error);\n    throw error;\n  }\n};\nexport const deleteUser = async userID => {\n  try {\n    const response = await axios.delete(`${API_URL}/users/${userID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting User:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchPosts","response","get","data","error","console","fetchPost","postID","fetchComments","fetchComment","commentID","fetchCommunities","fetchLinkFlairs","fetchUsers","fetchUserByEmail","email","fetchUserByDisplayName","displayName","fetchUserById","userId","createPost","post","createLinkFlair","flairContent","content","createCommunity","community","log","createComment","comment","createUser","user","updatePost","postId","put","updateCommunity","communityID","updatedCommunityData","updateComment","updatedCommentData","updateUser","userID","updatedUserData","deletePost","delete","deleteComment","deleteCommunity","deleteUser"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/api.js"],"sourcesContent":["// api.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\n// Fetch data with error handling\nexport const fetchPosts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/posts`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching posts:', error);\n    throw error;  // Propagate error so that it can be handled in the component\n  }\n};\n\nexport const fetchPost = async (postID) => {\n  try {\n    const response = await axios.get(`${API_URL}/posts/${postID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching post:', error);\n    throw error;  // Propagate error so that it can be handled in the component\n  }\n};\n\nexport const fetchComments = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/comments`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n    throw error;\n  }\n};\n\nexport const fetchComment = async (commentID) => {\n  try {\n    const response = await axios.get(`${API_URL}/comments/${commentID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching comment:', error);\n    throw error;  // Propagate error so that it can be handled in the component\n  }\n};\n\nexport const fetchCommunities = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/communities`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching communities:', error);\n    throw error;\n  }\n};\n\nexport const fetchLinkFlairs = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/linkflairs`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching link flairs:', error);\n    throw error;\n  }\n};\n\nexport const fetchUsers = async () => {\n  try{\n    const response = await axios.get(`${API_URL}/users`)\n    return response.data\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  } \n}\n\nexport const fetchUserByEmail = async (email) => {\n  try {\n    const response = await axios.get(`${API_URL}/users/email/${email}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with email ${email}:`, error);\n    throw error;\n  }\n};\n\nexport const fetchUserByDisplayName = async (displayName) => {\n  try {\n    const response = await axios.get(`${API_URL}/users/displayName/${displayName}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with displayName ${displayName}:`, error);\n    throw error;\n  }\n};\n\nexport const fetchUserById = async (userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with ID ${userId}:`, error);\n    throw error;\n  }\n};\n\n\n// Create, update, and delete posts with error handling\nexport const createPost = async (post) => {\n  try {\n    const response = await axios.post(`${API_URL}/posts`, post);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating post:', error);\n    throw error;\n  }\n};\n\nexport const createLinkFlair = async (flairContent) => {\n  try {\n    const response = await axios.post(`${API_URL}/linkflairs`, { content: flairContent });\n    return response.data; // This should return the new linkFlair with its generated ID\n  } catch (error) {\n    console.error('Error creating link flair:', error);\n    throw error;\n  }\n};\n\nexport const createCommunity = async (community) =>{\n  try{\n    const response = await axios.post(`${API_URL}/communities`, community)\n    return response.data;\n  }catch (error){\n    console.log(\"Error creating community\", error)\n    throw error;\n  }\n}\n\nexport const createComment = async (comment) => {\n  try{\n    const response = await axios.post(`${API_URL}/comments`, comment)\n    return response.data\n  }catch(error){\n    console.log(\"Error creating comment\", error)\n    throw error;\n  }\n}\n\nexport const createUser = async (user) => {\n  try{\n    const response = await axios.post(`${API_URL}/users`, user)\n    return response.data\n  }catch(error){\n    console.log(\"Error creating user\", error)\n    throw error;\n  }\n}\n\nexport const updatePost = async (postId, post) => {\n  try {\n    const response = await axios.put(`${API_URL}/posts/${postId}`, post);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating post:', error);\n    throw error;\n  }\n};\n\nexport const updateCommunity = async (communityID, updatedCommunityData) => {\n  try {\n    const response = await axios.put(`${API_URL}/communities/${communityID}`, updatedCommunityData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating community:', error);\n    throw error;\n  }\n};\n\nexport const updateComment = async (commentID, updatedCommentData) =>{\n  try{\n    const response = await axios.put(`${API_URL}/comments/${commentID}`, updatedCommentData)\n    return response.data\n  } catch (error){\n    console.error('Error updating comment:', error);\n    throw error;\n  }\n}\n\nexport const updateUser = async (userID, updatedUserData) =>{\n  try{\n    const response = await axios.put(`${API_URL}/users/${userID}`, updatedUserData)\n    return response.data\n  } catch (error){\n    console.error('Error updating user:', error);\n    throw error;\n  }\n}\n\nexport const deletePost = async (postId) => {\n  try {\n    const response = await axios.delete(`${API_URL}/posts/${postId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting post:', error);\n    throw error;\n  }\n};\n\nexport const deleteComment = async (commentID) => {\n  try {\n    const response = await axios.delete(`${API_URL}/comments/${commentID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting comment:', error);\n    throw error;\n  }\n};\n\nexport const deleteCommunity = async (communityID) => {\n  try {\n    console.log(\"attemtping to delete community with id: \", communityID)\n    const response = await axios.delete(`${API_URL}/communities/${communityID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting community:', error);\n    throw error;\n  }\n};\n\n\nexport const deleteUser = async (userID) => {\n  try {\n    const response = await axios.delete(`${API_URL}/users/${userID}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting User:', error);\n    throw error;\n  }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}