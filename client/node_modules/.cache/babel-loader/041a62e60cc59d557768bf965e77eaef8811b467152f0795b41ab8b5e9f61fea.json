{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/NewPostPage/CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../stylesheets/index.css';\nimport CommunitySelect from './CommunitySelect';\nimport PostTitle from './PostTitle';\nimport LinkFlair from './LinkFlair';\nimport PostContent from './PostContent';\nimport ErrorMessage from './ErrorMessage';\nimport { UsePhredditContext } from '../phredditContext';\nimport { createPost, createLinkFlair, updateCommunity, updatePost } from '../api';\nimport { usePostDeletion } from '../functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const {\n    deletePosts\n  } = usePostDeletion();\n  const {\n    communities,\n    linkflairs,\n    loadPage,\n    setPosts,\n    setCommunities,\n    setLinkFlairs,\n    user,\n    selectedPost,\n    setSelectedPost\n  } = UsePhredditContext();\n  const [communityID, setCommunityID] = useState('');\n  const [postTitle, setPostTitle] = useState('');\n  const [selectedFlair, setSelectedFlair] = useState('');\n  const [newFlair, setNewFlair] = useState('');\n  const [postContent, setPostContent] = useState('');\n  const [errors, setErrors] = useState({});\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useEffect(() => {\n    // If there's a selected community, populate the form with its data\n    if (selectedPost) {\n      setCommunityID(selectedPost.communityID);\n      setPostTitle(selectedPost.title);\n      setSelectedFlair(selectedPost.linkFlairID);\n      setPostContent(selectedPost.content);\n      console.log(selectedPost);\n    }\n  }, [selectedPost]);\n  const validateInputs = () => {\n    const newErrors = {};\n    if (!communityID) newErrors.community = 'Please select a community.';\n    if (!postTitle) newErrors.title = 'Post title is required.';\n    if (newFlair && newFlair.length > 30) {\n      newErrors.flair = 'New link flair must be 30 characters or less.';\n    } else if (selectedFlair && newFlair) {\n      newErrors.flair = 'You can only apply one link flair. Please choose one option.';\n    }\n    if (!postContent) newErrors.content = 'Post content is required.';\n    return newErrors;\n  };\n  const handleCreatePost = async event => {\n    event.preventDefault();\n    const newErrors = validateInputs();\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length > 0) {\n      return;\n    }\n    let linkFlairID = selectedFlair;\n\n    // Step 1: Create the new link flair if needed\n    if (newFlair) {\n      const createdLinkFlair = await createLinkFlair(newFlair);\n      linkFlairID = createdLinkFlair._id;\n      setLinkFlairs(prev => [...prev, createdLinkFlair]);\n    }\n\n    // If valid, create a new post\n    const postData = {\n      // postID: `p${posts.length + 1}`, // Unique ID for the post\n      title: postTitle,\n      content: postContent,\n      linkFlairID: linkFlairID,\n      createdBy: user.displayName,\n      postedDate: new Date(),\n      // Set the current date\n      commentIDs: [],\n      // Initialize with no comments\n      downvoters: [],\n      upvoters: [],\n      views: 0 // Initialize views count\n    };\n    if (selectedPost) {\n      // Update existing post\n      const updatedPost = await updatePost(selectedPost._id, postData);\n\n      // Remove post ID from the community's postIDs array\n      const communityToUpdate = communities.find(comm => comm._id === communityID);\n      if (communityToUpdate) {\n        const updatedPostIDs = communityToUpdate.postIDs.filter(postID => postID !== selectedPost._id);\n        await updateCommunity(communityID, {\n          postIDs: updatedPostIDs\n        });\n\n        // Update the community in local state\n        setCommunities(prevCommunities => prevCommunities.map(comm => comm._id === communityID ? {\n          ...comm,\n          postIDs: updatedPostIDs\n        } : comm));\n      }\n      setPosts(prevPosts => prevPosts.map(post => post._id === updatedPost._id ? updatedPost : post));\n    } else {\n      // Create a new post\n      const createdPost = await createPost(postData);\n      setPosts(prevPosts => [createdPost, ...prevPosts]);\n      const updatedCommunity = communities.find(comm => comm._id === communityID);\n      if (updatedCommunity) {\n        const updatedPostIDs = [...updatedCommunity.postIDs, createdPost._id];\n        await updateCommunity(communityID, {\n          postIDs: updatedPostIDs\n        });\n        setCommunities(prevCommunities => prevCommunities.map(comm => comm._id === communityID ? {\n          ...comm,\n          postIDs: updatedPostIDs\n        } : comm));\n      }\n    }\n    loadPage('home');\n  };\n  const showConfirm = e => {\n    e.preventDefault();\n    console.log(\"show\");\n    setShowConfirmation(true);\n  };\n  const handleDeletePost = () => {\n    deletePosts([selectedPost._id]);\n    setSelectedPost(null);\n    setShowConfirmation(false);\n    loadPage('userProfile');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 22\n        }, this), \": \", user.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CommunitySelect, {\n        communities: communities,\n        onSelect: setCommunityID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), errors.community && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: errors.community\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(PostTitle, {\n        title: postTitle,\n        onTitleChange: setPostTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(LinkFlair, {\n        linkFlairs: linkflairs,\n        selectedFlair: selectedFlair,\n        onSelectFlair: setSelectedFlair,\n        newFlair: newFlair,\n        onNewFlairChange: setNewFlair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), errors.flair && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: errors.flair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n        content: postContent,\n        onContentChange: setPostContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), errors.content && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: errors.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 36\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: selectedPost ? 'Update Post' : 'Submit Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: e => showConfirm(e),\n        hidden: !selectedPost,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete this post?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeletePost,\n          children: \"Yes, delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"X30Gropb3go60WqO1DGzA8pn6ZY=\", false, function () {\n  return [usePostDeletion];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","CommunitySelect","PostTitle","LinkFlair","PostContent","ErrorMessage","UsePhredditContext","createPost","createLinkFlair","updateCommunity","updatePost","usePostDeletion","jsxDEV","_jsxDEV","CreatePost","_s","deletePosts","communities","linkflairs","loadPage","setPosts","setCommunities","setLinkFlairs","user","selectedPost","setSelectedPost","communityID","setCommunityID","postTitle","setPostTitle","selectedFlair","setSelectedFlair","newFlair","setNewFlair","postContent","setPostContent","errors","setErrors","showConfirmation","setShowConfirmation","title","linkFlairID","content","console","log","validateInputs","newErrors","community","length","flair","handleCreatePost","event","preventDefault","Object","keys","createdLinkFlair","_id","prev","postData","createdBy","displayName","postedDate","Date","commentIDs","downvoters","upvoters","views","updatedPost","communityToUpdate","find","comm","updatedPostIDs","postIDs","filter","postID","prevCommunities","map","prevPosts","post","createdPost","updatedCommunity","showConfirm","e","handleDeletePost","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onSelect","message","onTitleChange","linkFlairs","onSelectFlair","onNewFlairChange","onContentChange","username","type","className","onClick","hidden","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/NewPostPage/CreatePost.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../stylesheets/index.css';\nimport CommunitySelect from './CommunitySelect';\nimport PostTitle from './PostTitle';\nimport LinkFlair from './LinkFlair';\nimport PostContent from './PostContent';\nimport ErrorMessage from './ErrorMessage';\nimport { UsePhredditContext } from '../phredditContext';\nimport { createPost, createLinkFlair, updateCommunity, updatePost } from '../api';\nimport { usePostDeletion } from '../functions';\n\nconst CreatePost = () => {\n    const {deletePosts} = usePostDeletion()\n    const {communities, linkflairs, loadPage, setPosts, setCommunities, setLinkFlairs, user, selectedPost, setSelectedPost} = UsePhredditContext()\n\n    const [communityID, setCommunityID] = useState('');\n    const [postTitle, setPostTitle] = useState('');\n    const [selectedFlair, setSelectedFlair] = useState('');\n    const [newFlair, setNewFlair] = useState('');\n    const [postContent, setPostContent] = useState('');\n    const [errors, setErrors] = useState({});\n    const [showConfirmation, setShowConfirmation] = useState(false)\n\n    useEffect(() => {\n        // If there's a selected community, populate the form with its data\n        if (selectedPost) {\n           setCommunityID(selectedPost.communityID)\n           setPostTitle(selectedPost.title)\n           setSelectedFlair(selectedPost.linkFlairID)\n           setPostContent(selectedPost.content)\n           console.log(selectedPost)\n        }\n\n    }, [selectedPost]);\n    \n    const validateInputs = () => {\n        const newErrors = {};\n        if (!communityID) newErrors.community = 'Please select a community.';\n        if (!postTitle) newErrors.title = 'Post title is required.';\n        if (newFlair && newFlair.length > 30) {\n            newErrors.flair = 'New link flair must be 30 characters or less.';\n        } else if (selectedFlair && newFlair) {\n            newErrors.flair = 'You can only apply one link flair. Please choose one option.';\n        }\n        if (!postContent) newErrors.content = 'Post content is required.';\n        return newErrors;\n    };\n\n    const handleCreatePost = async (event) => {\n        event.preventDefault();\n        const newErrors = validateInputs();\n        setErrors(newErrors);\n\n        if (Object.keys(newErrors).length > 0) {\n            return;\n        }\n\n        let linkFlairID = selectedFlair;\n\n        // Step 1: Create the new link flair if needed\n        if (newFlair) {\n            const createdLinkFlair = await createLinkFlair(newFlair);\n            linkFlairID = createdLinkFlair._id;\n            setLinkFlairs(prev => [...prev, createdLinkFlair]);\n        }\n\n        // If valid, create a new post\n        const postData = {\n            // postID: `p${posts.length + 1}`, // Unique ID for the post\n            title: postTitle,\n            content: postContent,\n            linkFlairID: linkFlairID,\n            createdBy: user.displayName,\n            postedDate: new Date(), // Set the current date\n            commentIDs: [], // Initialize with no comments\n            downvoters: [],\n            upvoters: [],\n            views: 0, // Initialize views count\n        };\n\n        if (selectedPost) {\n            // Update existing post\n            const updatedPost = await updatePost(selectedPost._id, postData);\n            \n            // Remove post ID from the community's postIDs array\n            const communityToUpdate = communities.find(comm => comm._id === communityID);\n            if (communityToUpdate) {\n                const updatedPostIDs = communityToUpdate.postIDs.filter(postID => postID !== selectedPost._id);\n                await updateCommunity(communityID, { postIDs: updatedPostIDs });\n                \n                // Update the community in local state\n                setCommunities(prevCommunities =>\n                    prevCommunities.map(comm =>\n                        comm._id === communityID ? { ...comm, postIDs: updatedPostIDs } : comm\n                    )\n                );\n            }\n            \n            setPosts(prevPosts =>\n                prevPosts.map(post => (post._id === updatedPost._id ? updatedPost : post))\n            );\n        } else {\n            // Create a new post\n            const createdPost = await createPost(postData);\n            setPosts(prevPosts => [createdPost, ...prevPosts]);\n\n            const updatedCommunity = communities.find(comm => comm._id === communityID);\n            if (updatedCommunity) {\n                const updatedPostIDs = [...updatedCommunity.postIDs, createdPost._id];\n                await updateCommunity(communityID, { postIDs: updatedPostIDs });\n                setCommunities(prevCommunities =>\n                    prevCommunities.map(comm =>\n                        comm._id === communityID ? { ...comm, postIDs: updatedPostIDs } : comm\n                    )\n                );\n            }\n        }\n\n    loadPage('home')\n\n    };\n    const showConfirm = (e) => {\n        e.preventDefault()\n        console.log(\"show\")\n        setShowConfirmation(true);\n    }\n\n    const handleDeletePost = () => {\n        deletePosts([selectedPost._id])\n        setSelectedPost(null)\n        setShowConfirmation(false)\n        loadPage('userProfile')\n    }\n\n    return (\n        <div>\n            <h1>Create a New Post</h1>\n            <form onSubmit={handleCreatePost}>\n                <div><b>Username</b>: {user.displayName}</div>\n                <CommunitySelect communities={communities} onSelect={setCommunityID} />\n                {errors.community && <ErrorMessage message={errors.community}/>}\n                \n                <PostTitle title={postTitle} onTitleChange={setPostTitle} />\n                {errors.title && <ErrorMessage message={errors.title} />}\n\n                \n                <LinkFlair\n                    linkFlairs={linkflairs}\n                    selectedFlair={selectedFlair}\n                    onSelectFlair={setSelectedFlair}\n                    newFlair={newFlair}\n                    onNewFlairChange={setNewFlair}\n                />\n                {errors.flair && <ErrorMessage message={errors.flair} />}\n\n                <PostContent content={postContent} onContentChange={setPostContent} />\n                {errors.content && <ErrorMessage message={errors.content}/>}\n                \n                {errors.username && <ErrorMessage message={errors.username} />}\n\n\n                <button type=\"submit\">{selectedPost ? 'Update Post' : 'Submit Post'}</button>\n                <button className = \"delete-button\" onClick={(e) => showConfirm(e)} hidden = {!selectedPost}>Delete</button>\n            </form>\n            \n            {/* Confirmation Popup */}\n            {showConfirmation && (\n                    <div className=\"confirmation-popup\">\n                        <div className=\"popup-content\">\n                            <h2>Are you sure you want to delete this post?</h2>\n                            <p>This action cannot be undone.</p>\n                            <button onClick={handleDeletePost}>Yes, delete</button>\n                            <button onClick={() => setShowConfirmation(false)}>Cancel</button>\n                        </div>\n                    </div>\n            )}\n        </div>\n    );\n};\n\nexport default CreatePost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}