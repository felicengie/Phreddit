{"ast":null,"code":"var _jsxFileName = \"/Users/felice/Documents/project-habibi/client/src/components/CommunityPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { displayPosts, sortPosts, getTimeDifference } from './functions'; // Adjust import path for functions\nimport { UsePhredditContext } from './phredditContext';\nimport { updateCommunity } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityPage = () => {\n  _s();\n  const {\n    communities,\n    setCommunities,\n    loadPage,\n    posts,\n    currentCommunityID,\n    user\n  } = UsePhredditContext();\n\n  //const communityData = model.data.communities.find(c => c.communityID === communityID)\n  //console.log(communityData)\n  //const communityPosts = model.data.posts.filter(post => communityData.postIDs.includes(post.postID))\n  const [community, setCommunity] = useState(null);\n  const [communityPosts, setCommunityPosts] = useState([]);\n  useEffect(() => {\n    const communityData = communities.find(c => c._id === currentCommunityID);\n    if (communityData) {\n      setCommunity(communityData);\n      const communityPosts = posts.filter(post => communityData.postIDs.includes(post._id));\n      setCommunityPosts(communityPosts);\n    }\n  }, [currentCommunityID]);\n  const handleSortChange = order => {\n    const sortedPosts = sortPosts(communityPosts, order); // Use your sorting function\n    setCommunityPosts(sortedPosts);\n  };\n  const handleJoinToggle = async () => {\n    const isMember = community.members.includes(user.displayName);\n    const updatedMembers = isMember ? community.members.filter(displayName => displayName !== user.displayName) // Remove user\n    : [...community.members, user.displayName]; // Add user\n\n    const updatedCommunityData = {\n      ...community,\n      members: updatedMembers\n    };\n    try {\n      const updatedCommunity = await updateCommunity(currentCommunityID, updatedCommunityData);\n      setCommunity(updatedCommunity); // Update the state with the new community data\n\n      // Update the global communities state in the context\n      setCommunities(prevCommunities => prevCommunities.map(c => c._id === currentCommunityID ? updatedCommunity : c));\n    } catch (error) {\n      console.error('Error updating community membership:', error);\n    }\n  };\n  if (!community) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading community...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 26\n  }, this);\n  const isMember = community.members.includes(user === null || user === void 0 ? void 0 : user.displayName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"communityPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"communityPage-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-text\",\n        children: community.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewPost-buttons\",\n        children: [user && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleJoinToggle,\n          children: isMember ? 'Leave' : 'Join'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"viewPost-button\",\n          onClick: () => handleSortChange('newest'),\n          children: \"Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"viewPost-button\",\n          onClick: () => handleSortChange('oldest'),\n          children: \"Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"viewPost-button\",\n          onClick: () => handleSortChange('active'),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Created By: \", community.createdBy, \" | \", `${getTimeDifference(community.startDate.toLocaleString())}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-description\",\n      children: community.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timestamp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [communityPosts.length, \" post(s) Members: \", community.members.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community-post-list\",\n      style: {\n        overflowY: 'scroll'\n      },\n      children: displayPosts({\n        posts: communityPosts,\n        showCommunityName: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityPage, \"IpQp8AfdQScT4TE7gdj3X1efRW0=\");\n_c = CommunityPage;\nexport default CommunityPage;\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","displayPosts","sortPosts","getTimeDifference","UsePhredditContext","updateCommunity","jsxDEV","_jsxDEV","CommunityPage","_s","communities","setCommunities","loadPage","posts","currentCommunityID","user","community","setCommunity","communityPosts","setCommunityPosts","communityData","find","c","_id","filter","post","postIDs","includes","handleSortChange","order","sortedPosts","handleJoinToggle","isMember","members","displayName","updatedMembers","updatedCommunityData","updatedCommunity","prevCommunities","map","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","onClick","createdBy","startDate","toLocaleString","description","length","id","style","overflowY","showCommunityName","_c","$RefreshReg$"],"sources":["/Users/felice/Documents/project-habibi/client/src/components/CommunityPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { displayPosts, sortPosts, getTimeDifference } from './functions'; // Adjust import path for functions\nimport { UsePhredditContext } from './phredditContext';\nimport { updateCommunity } from './api';\n\nconst CommunityPage = () => {\n    const {communities, setCommunities, loadPage, posts, currentCommunityID, user} = UsePhredditContext()\n\n  //const communityData = model.data.communities.find(c => c.communityID === communityID)\n  //console.log(communityData)\n  //const communityPosts = model.data.posts.filter(post => communityData.postIDs.includes(post.postID))\n  const [community, setCommunity] = useState(null);\n  const [communityPosts, setCommunityPosts] = useState([]);\n\n  useEffect(() => {\n    const communityData = communities.find(c => c._id === currentCommunityID);\n    if (communityData) {\n      setCommunity(communityData);\n      const communityPosts = posts.filter(post => communityData.postIDs.includes(post._id));\n      setCommunityPosts(communityPosts);\n    }\n  }, [currentCommunityID]);\n\n  \n  const handleSortChange = (order) => {\n    const sortedPosts = sortPosts(communityPosts, order); // Use your sorting function\n    setCommunityPosts(sortedPosts);\n  };\n\n\n  const handleJoinToggle = async () => {\n    const isMember = community.members.includes(user.displayName);\n    const updatedMembers = isMember\n      ? community.members.filter((displayName) => displayName !== user.displayName) // Remove user\n      : [...community.members, user.displayName]; // Add user\n\n    const updatedCommunityData = {\n      ...community,\n      members: updatedMembers,\n    };\n\n    try {\n      const updatedCommunity = await updateCommunity(currentCommunityID, updatedCommunityData);\n      setCommunity(updatedCommunity); // Update the state with the new community data\n\n      // Update the global communities state in the context\n      setCommunities((prevCommunities) =>\n        prevCommunities.map((c) =>\n          c._id === currentCommunityID ? updatedCommunity : c\n        )\n      );\n    } catch (error) {\n      console.error('Error updating community membership:', error);\n    }\n  };\n\n  if (!community) return <div>Loading community...</div>;\n\n  const isMember = community.members.includes(user?.displayName);\n\n  return (\n    <div className=\"communityPage\">\n      <header className=\"communityPage-header\">\n        <div className=\"header-text\">{community.name}</div>\n       \n        <div className=\"viewPost-buttons\">\n          {user && <button className = \"logout-button\" onClick={handleJoinToggle}>{isMember ? 'Leave' : 'Join'}</button>}\n          <button className=\"viewPost-button\" onClick={() => handleSortChange('newest')}>Newest</button>\n          <button className=\"viewPost-button\" onClick={() => handleSortChange('oldest')}>Oldest</button>\n          <button className=\"viewPost-button\" onClick={() => handleSortChange('active')}>Active</button>\n        </div>\n      </header>\n      <div>Created By: {community.createdBy} | {`${getTimeDifference(community.startDate.toLocaleString())}`}</div>\n      <div className=\"community-description\">{community.description}</div>\n      <div className=\"timestamp\">\n        \n      </div>\n\n      <div>{communityPosts.length} post(s) Members: {community.members.length}</div>\n\n      \n      <div id=\"community-post-list\" style={{ overflowY: 'scroll' }}>\n        {displayPosts({ posts: communityPosts,showCommunityName: false})}\n      </div>\n    </div>\n  );\n};\n\nexport default CommunityPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}